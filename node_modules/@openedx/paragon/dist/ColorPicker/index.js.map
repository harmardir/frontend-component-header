{"version":3,"file":"index.js","names":["React","PropTypes","classNames","HexColorPicker","Button","Form","ModalPopup","OverlayTrigger","Tooltip","useToggle","ColorPicker","_ref","color","setColor","className","size","_useToggle","_useToggle2","_slicedToArray","isOpen","open","close","_React$useState","useState","_React$useState2","target","setTarget","colorIsValid","colorToValidate","hexRegex","test","formatHexColorString","colorString","startsWith","concat","slice","_React$useState3","_React$useState4","hexValid","setHexValid","_React$useState5","_React$useState6","hexColorString","setHexColorString","_React$useState7","formattedColor","_React$useState8","colorToDisplay","setColorToDisplay","setValidatedColor","newColor","createElement","Fragment","placement","overlay","id","ref","style","_objectSpread","background","onClick","positionRef","onClose","textAlign","onChange","Group","Label","Control","isInvalid","value","e","spellCheck","Feedback","type","defaultProps","undefined","propTypes","string","func","isRequired","oneOf"],"sources":["../../src/ColorPicker/index.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { HexColorPicker } from 'react-colorful';\n\nimport Button from '../Button';\nimport Form from '../Form';\nimport ModalPopup from '../Modal/ModalPopup';\nimport { OverlayTrigger } from '../Overlay';\nimport Tooltip from '../Tooltip';\nimport useToggle from '../hooks/useToggle';\n\nfunction ColorPicker({\n  color, setColor, className, size,\n}) {\n  const [isOpen, open, close] = useToggle(false);\n  const [target, setTarget] = React.useState(null);\n\n  const colorIsValid = (colorToValidate) => {\n    const hexRegex = /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n    return hexRegex.test(colorToValidate);\n  };\n\n  const formatHexColorString = (colorString) => {\n    if (!colorString.startsWith('#')) {\n      return `#${colorString}`.slice(0, 7);\n    }\n\n    return colorString.slice(0, 7);\n  };\n\n  const [hexValid, setHexValid] = React.useState(() => (color === '' || colorIsValid(formatHexColorString(color))));\n\n  const [hexColorString, setHexColorString] = React.useState(() => {\n    if (color === '') {\n      return '';\n    }\n\n    return formatHexColorString(color);\n  });\n  const [colorToDisplay, setColorToDisplay] = React.useState(() => {\n    const formattedColor = formatHexColorString(color);\n    if (colorIsValid(formattedColor)) {\n      return formattedColor;\n    }\n\n    return '#fff';\n  });\n\n  const setValidatedColor = (newColor) => {\n    if (newColor === '') {\n      setHexValid(true);\n      setColor('');\n      setHexColorString('');\n      setColorToDisplay('#fff');\n      return;\n    }\n\n    const formattedColor = formatHexColorString(newColor);\n\n    if (colorIsValid(formattedColor)) {\n      setHexValid(true);\n      setColor(formattedColor);\n      setHexColorString(formattedColor);\n      setColorToDisplay(formattedColor);\n      return;\n    }\n\n    setHexValid(false);\n    setHexColorString(formattedColor);\n\n    // ensure the picker value stays in sync with the textbox\n    setColor(formattedColor);\n  };\n\n  return (\n    <>\n      <span className=\"d-flex\">\n        <OverlayTrigger\n          placement=\"top\"\n          overlay={<Tooltip id=\"color-picker-tooltip\">Color picker</Tooltip>}\n        >\n          <Button\n            ref={setTarget}\n            className={classNames(\n              className,\n              'pgn__color-picker',\n              `pgn__color-picker-${size}`,\n            )}\n            style={{\n              ...(color && hexValid ? { background: `${color}` } : {}),\n            }}\n            onClick={open}\n          />\n        </OverlayTrigger>\n      </span>\n      <ModalPopup\n        positionRef={target}\n        isOpen={isOpen}\n        style={{ background: 'black' }}\n        onClose={close}\n      >\n        <div\n          className=\"pgn__color-modal rounded shadow\"\n          style={{ textAlign: 'start' }}\n        >\n          <HexColorPicker color={colorToDisplay} onChange={setValidatedColor} />\n          <Form.Group className=\"pgn__hex-form\" size=\"sm\">\n            <div>\n              <Form.Label className=\"pgn__hex-label\">Hex</Form.Label>\n              <Form.Control\n                className=\"pgn__hex-field\"\n                isInvalid={!hexValid}\n                value={hexColorString}\n                onChange={(e) => setValidatedColor(e.target.value)}\n                data-testid=\"hex-input\"\n                spellCheck=\"false\"\n              />\n            </div>\n            {!hexValid && (\n              <Form.Control.Feedback\n                className=\"pgn__color-error\"\n                type=\"invalid\"\n              >\n                Colors must be in hexadecimal format.\n              </Form.Control.Feedback>\n            )}\n          </Form.Group>\n        </div>\n      </ModalPopup>\n    </>\n  );\n}\n\nColorPicker.defaultProps = {\n  color: '',\n  className: undefined,\n  size: 'md',\n};\n\nColorPicker.propTypes = {\n  /** A default hex code to preset the picker to display. */\n  color: PropTypes.string,\n  /** Passing setState function allows parent to alter the color. */\n  setColor: PropTypes.func.isRequired,\n  /** A class name to append to the base element. */\n  className: PropTypes.string,\n  /** Size of the color picker */\n  size: PropTypes.oneOf(['sm', 'md']),\n};\n\nexport default ColorPicker;\n"],"mappings":"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","ignoreList":[]}