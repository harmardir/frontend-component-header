{"version":3,"file":"index.js","names":["React","classNames","PropTypes","ReducedPagination","MinimalPagination","DefaultPagination","PaginationContextProvider","PAGINATION_VARIANTS","ScreenReaderText","greaterThan","ChevronLeft","ChevronRight","Pagination","props","_classNames","invertColors","variant","size","paginationLabel","className","renderPaginationComponent","reduced","createElement","minimal","_defineProperty","concat","propTypes","onPageSelect","func","isRequired","pageCount","number","string","buttonLabels","shape","previous","next","page","currentPage","pageOfCount","maxPagesDisplayed","icons","leftIcon","elementType","rightIcon","oneOf","bool","initialPage","defaultProps","undefined"],"sources":["../../src/Pagination/index.jsx"],"sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport ReducedPagination from './ReducedPagination';\nimport MinimalPagination from './MinimalPagination';\nimport DefaultPagination from './DefaultPagination';\nimport { PaginationContextProvider } from './PaginationContext';\nimport { PAGINATION_VARIANTS } from './constants';\nimport { ScreenReaderText } from './subcomponents';\n\nimport { greaterThan } from '../utils/propTypes';\nimport { ChevronLeft, ChevronRight } from '../../icons';\n\nfunction Pagination(props) {\n  const {\n    invertColors,\n    variant,\n    size,\n    paginationLabel,\n    className,\n  } = props;\n\n  const renderPaginationComponent = () => {\n    if (variant === PAGINATION_VARIANTS.reduced) {\n      return <ReducedPagination />;\n    }\n\n    if (variant === PAGINATION_VARIANTS.minimal) {\n      return <MinimalPagination />;\n    }\n\n    return <DefaultPagination />;\n  };\n\n  return (\n    <PaginationContextProvider {...props}>\n      <nav\n        aria-label={paginationLabel}\n        className={classNames(className, {\n          [`pagination-${variant}`]: variant,\n          'pagination-inverse': invertColors,\n          'pagination-small': size !== PAGINATION_VARIANTS.default,\n        })}\n      >\n        <ScreenReaderText />\n        {renderPaginationComponent()}\n      </nav>\n    </PaginationContextProvider>\n  );\n}\n\nPagination.propTypes = {\n  /**\n   * Specifies a callback function that is executed when the\n   * user selects a page button or the `Previous`/`Next` buttons. For example:\n   *\n   * ```jsx\n   *  <Pagination onPageSelect={(pageNumber) => { console.log(pageNumber); } />\n   * ```\n   */\n  onPageSelect: PropTypes.func.isRequired,\n  /** Specifies the total number of pages in the `Pagination` component. */\n  pageCount: PropTypes.number.isRequired,\n  /** Specifies the `aria-label` for the `<nav>` element that wraps the pagination button list. */\n  paginationLabel: PropTypes.string.isRequired,\n  /**\n   * Specifies the labels to use for the `Previous`/`Next`\n   * buttons as well as the various parts of `aria-label`\n   * on the page buttons for accessibility. All button labels\n   * accept both string or elements. The button label options are as follows:\n   *\n   * `previous`: Text for the `Previous` button;\n   *\n   * `next`: Text for the `Next` button;\n   *\n   * `page`: Text in the `aria-label` on page buttons to describe the button (e.g., \"**Page** 1\");\n   *\n   * `currentPage`: Text to depict the selected page in the `aria-label`\n   * on page buttons (e.g., \"Page 1, **Current Page**\");\n   *\n   * `pageOfCount`: Text that separates the current page and total page count\n   * for the mobile UI (e.g., \"Page 1 **of** 20\").\n   *\n   * The default is:\n   * ```javascript\n   * {\n   *   previous: 'Previous',\n   *   next: 'Next',\n   *   page: 'Page',\n   *   currentPage: 'Current Page',\n   *   pageOfCount: 'of',\n   * }\n   * ```\n   */\n  buttonLabels: PropTypes.shape({\n    previous: PropTypes.string,\n    next: PropTypes.string,\n    page: PropTypes.string,\n    currentPage: PropTypes.string,\n    pageOfCount: PropTypes.string,\n  }),\n  /** Specifies any class name(s) for the `Pagination` component. The default is an empty string. */\n  className: PropTypes.string,\n  /** specifies the page that the `Pagination` component will automatically select. The default is `1`. */\n  currentPage: PropTypes.number,\n  /**\n   * Specifies the number of page buttons to display in between the `Previous`\n   * and `Next` buttons. This number also includes any ellipses in the total count.\n   * Also, to ensure that at least one clickable page button is shown when both ellipses\n   * are displayed, this value must be greater than `4`. The default is `7`.\n   */\n  maxPagesDisplayed: greaterThan(4),\n  /**\n   * Specifies icons used to indicate previous and next page. Can be an element,\n   * string, symbol, etc. Default is chevrons rendered using fa-css.\n   */\n  icons: PropTypes.shape({\n    leftIcon: PropTypes.elementType,\n    rightIcon: PropTypes.elementType,\n  }),\n  variant: PropTypes.oneOf(['default', 'secondary', 'reduced', 'minimal']),\n  invertColors: PropTypes.bool,\n  size: PropTypes.oneOf(['default', 'small']),\n  initialPage: PropTypes.number,\n};\n\nPagination.defaultProps = {\n  icons: {\n    leftIcon: ChevronLeft,\n    rightIcon: ChevronRight,\n  },\n  buttonLabels: {\n    previous: 'Previous',\n    next: 'Next',\n    page: 'Page',\n    currentPage: 'Current Page',\n    pageOfCount: 'of',\n  },\n  className: undefined,\n  initialPage: 1,\n  currentPage: undefined,\n  maxPagesDisplayed: 7,\n  variant: 'default',\n  invertColors: false,\n  size: 'default',\n};\n\nexport default Pagination;\nexport * from './constants';\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,SAAS,MAAM,YAAY;AAElC,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,SAASC,yBAAyB,QAAQ,qBAAqB;AAC/D,SAASC,mBAAmB,QAAQ,aAAa;AACjD,SAASC,gBAAgB,QAAQ,iBAAiB;AAElD,SAASC,WAAW,QAAQ,oBAAoB;AAChD,SAASC,WAAW,EAAEC,YAAY,QAAQ,aAAa;AAEvD,SAASC,UAAUA,CAACC,KAAK,EAAE;EAAA,IAAAC,WAAA;EACzB,IACEC,YAAY,GAKVF,KAAK,CALPE,YAAY;IACZC,OAAO,GAILH,KAAK,CAJPG,OAAO;IACPC,IAAI,GAGFJ,KAAK,CAHPI,IAAI;IACJC,eAAe,GAEbL,KAAK,CAFPK,eAAe;IACfC,SAAS,GACPN,KAAK,CADPM,SAAS;EAGX,IAAMC,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAA,EAAS;IACtC,IAAIJ,OAAO,KAAKT,mBAAmB,CAACc,OAAO,EAAE;MAC3C,oBAAOrB,KAAA,CAAAsB,aAAA,CAACnB,iBAAiB,MAAE,CAAC;IAC9B;IAEA,IAAIa,OAAO,KAAKT,mBAAmB,CAACgB,OAAO,EAAE;MAC3C,oBAAOvB,KAAA,CAAAsB,aAAA,CAAClB,iBAAiB,MAAE,CAAC;IAC9B;IAEA,oBAAOJ,KAAA,CAAAsB,aAAA,CAACjB,iBAAiB,MAAE,CAAC;EAC9B,CAAC;EAED,oBACEL,KAAA,CAAAsB,aAAA,CAAChB,yBAAyB,EAAKO,KAAK,eAClCb,KAAA,CAAAsB,aAAA;IACE,cAAYJ,eAAgB;IAC5BC,SAAS,EAAElB,UAAU,CAACkB,SAAS,GAAAL,WAAA,OAAAU,eAAA,CAAAV,WAAA,gBAAAW,MAAA,CACdT,OAAO,GAAKA,OAAO,GAAAQ,eAAA,CAAAV,WAAA,EAClC,oBAAoB,EAAEC,YAAY,GAAAS,eAAA,CAAAV,WAAA,EAClC,kBAAkB,EAAEG,IAAI,KAAKV,mBAAmB,WAAQ,GAAAO,WAAA,CACzD;EAAE,gBAEHd,KAAA,CAAAsB,aAAA,CAACd,gBAAgB,MAAE,CAAC,EACnBY,yBAAyB,CAAC,CACxB,CACoB,CAAC;AAEhC;AAEAR,UAAU,CAACc,SAAS,GAAG;EACrB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,YAAY,EAAEzB,SAAS,CAAC0B,IAAI,CAACC,UAAU;EACvC;EACAC,SAAS,EAAE5B,SAAS,CAAC6B,MAAM,CAACF,UAAU;EACtC;EACAX,eAAe,EAAEhB,SAAS,CAAC8B,MAAM,CAACH,UAAU;EAC5C;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEI,YAAY,EAAE/B,SAAS,CAACgC,KAAK,CAAC;IAC5BC,QAAQ,EAAEjC,SAAS,CAAC8B,MAAM;IAC1BI,IAAI,EAAElC,SAAS,CAAC8B,MAAM;IACtBK,IAAI,EAAEnC,SAAS,CAAC8B,MAAM;IACtBM,WAAW,EAAEpC,SAAS,CAAC8B,MAAM;IAC7BO,WAAW,EAAErC,SAAS,CAAC8B;EACzB,CAAC,CAAC;EACF;EACAb,SAAS,EAAEjB,SAAS,CAAC8B,MAAM;EAC3B;EACAM,WAAW,EAAEpC,SAAS,CAAC6B,MAAM;EAC7B;AACF;AACA;AACA;AACA;AACA;EACES,iBAAiB,EAAE/B,WAAW,CAAC,CAAC,CAAC;EACjC;AACF;AACA;AACA;EACEgC,KAAK,EAAEvC,SAAS,CAACgC,KAAK,CAAC;IACrBQ,QAAQ,EAAExC,SAAS,CAACyC,WAAW;IAC/BC,SAAS,EAAE1C,SAAS,CAACyC;EACvB,CAAC,CAAC;EACF3B,OAAO,EAAEd,SAAS,CAAC2C,KAAK,CAAC,CAAC,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;EACxE9B,YAAY,EAAEb,SAAS,CAAC4C,IAAI;EAC5B7B,IAAI,EAAEf,SAAS,CAAC2C,KAAK,CAAC,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;EAC3CE,WAAW,EAAE7C,SAAS,CAAC6B;AACzB,CAAC;AAEDnB,UAAU,CAACoC,YAAY,GAAG;EACxBP,KAAK,EAAE;IACLC,QAAQ,EAAEhC,WAAW;IACrBkC,SAAS,EAAEjC;EACb,CAAC;EACDsB,YAAY,EAAE;IACZE,QAAQ,EAAE,UAAU;IACpBC,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE,MAAM;IACZC,WAAW,EAAE,cAAc;IAC3BC,WAAW,EAAE;EACf,CAAC;EACDpB,SAAS,EAAE8B,SAAS;EACpBF,WAAW,EAAE,CAAC;EACdT,WAAW,EAAEW,SAAS;EACtBT,iBAAiB,EAAE,CAAC;EACpBxB,OAAO,EAAE,SAAS;EAClBD,YAAY,EAAE,KAAK;EACnBE,IAAI,EAAE;AACR,CAAC;AAED,eAAeL,UAAU;AACzB,cAAc,aAAa","ignoreList":[]}