{"version":3,"file":"CardSection.js","names":["React","useContext","PropTypes","classNames","Skeleton","CardContext","SKELETON_HEIGHT_VALUE","CardSection","forwardRef","_ref","ref","className","children","title","actions","muted","skeletonHeight","skeletonWidth","_useContext","isLoading","createElement","containerClassName","height","width","propTypes","string","node","bool","number","defaultProps","undefined"],"sources":["../../src/Card/CardSection.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Skeleton from 'react-loading-skeleton';\nimport CardContext from './CardContext';\n\nconst SKELETON_HEIGHT_VALUE = 100;\n\nconst CardSection = React.forwardRef(({\n  className,\n  children,\n  title,\n  actions,\n  muted,\n  skeletonHeight,\n  skeletonWidth,\n}, ref) => {\n  const { isLoading } = useContext(CardContext);\n\n  if (isLoading) {\n    return (\n      <div className={classNames('pgn__card-section', className, { 'is-muted': muted })}>\n        <Skeleton\n          containerClassName=\"pgn__card-section-loader\"\n          height={skeletonHeight}\n          width={skeletonWidth}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={classNames('pgn__card-section', className, { 'is-muted': muted })}\n      ref={ref}\n    >\n      {title && <div className=\"pgn__card-section-title\">{title}</div>}\n      {children}\n      {actions && <div className=\"pgn__card-section-actions\">{actions}</div>}\n    </div>\n  );\n});\n\nCardSection.propTypes = {\n  /** Specifies class name to append to the base element. */\n  className: PropTypes.string,\n  /** Specifies contents of the component. */\n  children: PropTypes.node,\n  /** Specifies title of the `Section`. */\n  title: PropTypes.node,\n  /** Specifies node to render on the bottom right of the `Section` (i.e. `ActionRow`). */\n  actions: PropTypes.node,\n  /** Specifies whether to display `Section` with muted styling. */\n  muted: PropTypes.bool,\n  /** Specifies height of skeleton in loading state. */\n  skeletonHeight: PropTypes.number,\n  /** Specifies width of skeleton in loading state. */\n  skeletonWidth: PropTypes.number,\n};\n\nCardSection.defaultProps = {\n  children: null,\n  className: undefined,\n  title: undefined,\n  actions: undefined,\n  muted: false,\n  skeletonHeight: SKELETON_HEIGHT_VALUE,\n  skeletonWidth: undefined,\n};\n\nexport default CardSection;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,WAAW,MAAM,eAAe;AAEvC,IAAMC,qBAAqB,GAAG,GAAG;AAEjC,IAAMC,WAAW,gBAAGP,KAAK,CAACQ,UAAU,CAAC,UAAAC,IAAA,EAQlCC,GAAG,EAAK;EAAA,IAPTC,SAAS,GAAAF,IAAA,CAATE,SAAS;IACTC,QAAQ,GAAAH,IAAA,CAARG,QAAQ;IACRC,KAAK,GAAAJ,IAAA,CAALI,KAAK;IACLC,OAAO,GAAAL,IAAA,CAAPK,OAAO;IACPC,KAAK,GAAAN,IAAA,CAALM,KAAK;IACLC,cAAc,GAAAP,IAAA,CAAdO,cAAc;IACdC,aAAa,GAAAR,IAAA,CAAbQ,aAAa;EAEb,IAAAC,WAAA,GAAsBjB,UAAU,CAACI,WAAW,CAAC;IAArCc,SAAS,GAAAD,WAAA,CAATC,SAAS;EAEjB,IAAIA,SAAS,EAAE;IACb,oBACEnB,KAAA,CAAAoB,aAAA;MAAKT,SAAS,EAAER,UAAU,CAAC,mBAAmB,EAAEQ,SAAS,EAAE;QAAE,UAAU,EAAEI;MAAM,CAAC;IAAE,gBAChFf,KAAA,CAAAoB,aAAA,CAAChB,QAAQ;MACPiB,kBAAkB,EAAC,0BAA0B;MAC7CC,MAAM,EAAEN,cAAe;MACvBO,KAAK,EAAEN;IAAc,CACtB,CACE,CAAC;EAEV;EAEA,oBACEjB,KAAA,CAAAoB,aAAA;IACET,SAAS,EAAER,UAAU,CAAC,mBAAmB,EAAEQ,SAAS,EAAE;MAAE,UAAU,EAAEI;IAAM,CAAC,CAAE;IAC7EL,GAAG,EAAEA;EAAI,GAERG,KAAK,iBAAIb,KAAA,CAAAoB,aAAA;IAAKT,SAAS,EAAC;EAAyB,GAAEE,KAAW,CAAC,EAC/DD,QAAQ,EACRE,OAAO,iBAAId,KAAA,CAAAoB,aAAA;IAAKT,SAAS,EAAC;EAA2B,GAAEG,OAAa,CAClE,CAAC;AAEV,CAAC,CAAC;AAEFP,WAAW,CAACiB,SAAS,GAAG;EACtB;EACAb,SAAS,EAAET,SAAS,CAACuB,MAAM;EAC3B;EACAb,QAAQ,EAAEV,SAAS,CAACwB,IAAI;EACxB;EACAb,KAAK,EAAEX,SAAS,CAACwB,IAAI;EACrB;EACAZ,OAAO,EAAEZ,SAAS,CAACwB,IAAI;EACvB;EACAX,KAAK,EAAEb,SAAS,CAACyB,IAAI;EACrB;EACAX,cAAc,EAAEd,SAAS,CAAC0B,MAAM;EAChC;EACAX,aAAa,EAAEf,SAAS,CAAC0B;AAC3B,CAAC;AAEDrB,WAAW,CAACsB,YAAY,GAAG;EACzBjB,QAAQ,EAAE,IAAI;EACdD,SAAS,EAAEmB,SAAS;EACpBjB,KAAK,EAAEiB,SAAS;EAChBhB,OAAO,EAAEgB,SAAS;EAClBf,KAAK,EAAE,KAAK;EACZC,cAAc,EAAEV,qBAAqB;EACrCW,aAAa,EAAEa;AACjB,CAAC;AAED,eAAevB,WAAW","ignoreList":[]}