{"version":3,"file":"SearchFieldAdvanced.js","names":["React","useRef","createContext","useState","useEffect","PropTypes","classNames","Search","Close","newId","SearchFieldContext","BUTTON_LOCATION_VARIANTS","SearchFieldAdvanced","props","children","className","screenReaderText","icons","onSubmit","onClear","onChange","onBlur","onFocus","initialValue","value","formAriaLabel","disabled","submitButtonLocation","rest","_objectWithoutProperties","_excluded","_useState","_useState2","_slicedToArray","hasFocus","setHasFocus","_useState3","_useState4","setValue","isInitialMount","inputId","concat","inputRef","submitButtonRef","current","handleSubmit","event","preventDefault","focus","handleClear","handleFocus","handleBlur","handleChange","target","createElement","_extends","role","onReset","Provider","refs","input","submitButton","propTypes","node","isRequired","func","string","shape","label","oneOfType","element","clearButton","submit","elementType","clear","bool","oneOf","defaultProps","undefined"],"sources":["../../src/SearchField/SearchFieldAdvanced.jsx"],"sourcesContent":["import React, {\n  useRef, createContext, useState, useEffect,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Search, Close } from '../../icons';\nimport newId from '../utils/newId';\n\nexport const SearchFieldContext = createContext();\n\nconst BUTTON_LOCATION_VARIANTS = [\n  'internal',\n  'external',\n];\n\nfunction SearchFieldAdvanced(props) {\n  const {\n    children,\n    className,\n    screenReaderText,\n    icons,\n    onSubmit,\n    onClear,\n    onChange,\n    onBlur,\n    onFocus,\n    value: initialValue,\n    formAriaLabel,\n    disabled,\n    submitButtonLocation,\n    ...rest\n  } = props;\n\n  const [hasFocus, setHasFocus] = useState(false);\n  const [value, setValue] = useState(initialValue);\n\n  const isInitialMount = useRef(true);\n  const inputId = useRef(`${newId('pgn-searchfield-input-')}`);\n  const inputRef = useRef();\n  const submitButtonRef = useRef();\n\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      onChange(value);\n    }\n  }, [value, onChange]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onSubmit(value);\n    if (submitButtonRef && submitButtonRef.current) {\n      submitButtonRef.current.focus();\n    }\n  };\n\n  const handleClear = () => {\n    setValue('');\n    onClear();\n    if (inputRef && inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  const handleFocus = (event) => {\n    setHasFocus(true);\n    onFocus(event);\n  };\n\n  const handleBlur = (event) => {\n    setHasFocus(false);\n    onBlur(event);\n  };\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <div\n      className={classNames(\n        'pgn__searchfield',\n        'd-flex',\n        {\n          'has-focus': hasFocus,\n          disabled,\n          'pgn__searchfield--external': submitButtonLocation === 'external',\n        },\n        className,\n      )}\n      {...rest}\n    >\n      <form\n        role=\"search\"\n        onSubmit={handleSubmit}\n        onReset={handleClear}\n        className=\"pgn__searchfield-form\"\n        aria-label={formAriaLabel}\n      >\n        <SearchFieldContext.Provider\n          value={{\n            inputId,\n            screenReaderText,\n            icons,\n            value,\n            disabled,\n            handleFocus,\n            handleBlur,\n            handleChange,\n            refs: {\n              input: inputRef,\n              submitButton: submitButtonRef,\n            },\n          }}\n        >\n          {children}\n        </SearchFieldContext.Provider>\n      </form>\n    </div>\n  );\n}\n\nSearchFieldAdvanced.propTypes = {\n  /** specifies the nested child elements. At a minimum, `SearchField.Label` and `SearchField.Input` are required. */\n  children: PropTypes.node.isRequired,\n  /** specifies a callback function for when the `SearchField` is submitted by the user. For example:\n  ```jsx\n  <SearchField onSubmit={(value) => { console.log(value); } />\n  ``` */\n  onSubmit: PropTypes.func.isRequired,\n  /** specifies a custom class name. */\n  className: PropTypes.string,\n  /** specifies a callback function for when the user loses focus in the `SearchField` component.\n   * The default is an empty function. For example:\n  ```jsx\n  <SearchField onBlur={event => console.log(event)} />\n  ``` */\n  onBlur: PropTypes.func,\n  /** specifies a callback function for when the value in `SearchField` is changed by the user.\n   * The default is an empty function. For example:\n  ```jsx\n  <SearchField onChange={value => console.log(value)} />\n  ``` */\n  onChange: PropTypes.func,\n  /** specifies a callback function for when the value in `SearchField` is cleared by the user.\n   * The default is an empty function. For example:\n  ```jsx\n  <SearchField onClear={() => console.log('search cleared')} />\n  ``` */\n  onClear: PropTypes.func,\n  /** specifies a callback function for when the user focuses in the `SearchField` component.\n   * The default is an empty function. For example:\n  ```jsx\n  <SearchField onFocus={event => console.log(event)} />\n  ``` */\n  onFocus: PropTypes.func,\n  /** specifies the screenreader text for both the clear and submit buttons (e.g., for i18n translations).\n   * The default is `{ label: 'search', clearButton: 'clear search', searchButton: 'submit search' }`. */\n  screenReaderText: PropTypes.shape({\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n    submitButton: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n    clearButton: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  }),\n  /** specifies the initial value for the input. The default is an empty string. */\n  value: PropTypes.string,\n  /** specifies the icon element(s) to use for the clear and submit buttons. */\n  icons: PropTypes.shape({\n    submit: PropTypes.elementType.isRequired,\n    clear: PropTypes.elementType,\n  }),\n  /** specifies the aria-label attribute on the form element. This is useful if you use the `SearchField` component\n   * more than once on a page. */\n  formAriaLabel: PropTypes.string,\n  /** Specifies whether the `SearchField` is disabled. */\n  disabled: PropTypes.bool,\n  /** Controls whether the search button is internal as an icon or external as a button. */\n  submitButtonLocation: PropTypes.oneOf(BUTTON_LOCATION_VARIANTS),\n};\n\nSearchFieldAdvanced.defaultProps = {\n  className: undefined,\n  formAriaLabel: undefined,\n  value: '',\n  screenReaderText: {\n    label: 'search',\n    submitButton: 'submit search',\n    clearButton: 'clear search',\n  },\n  icons: {\n    clear: Close,\n    submit: Search,\n  },\n  onBlur: () => {},\n  onChange: () => {},\n  onFocus: () => {},\n  onClear: () => {},\n  disabled: false,\n  submitButtonLocation: 'internal',\n};\n\nexport default SearchFieldAdvanced;\n"],"mappings":"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","ignoreList":[]}