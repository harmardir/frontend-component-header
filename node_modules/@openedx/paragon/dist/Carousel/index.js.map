{"version":3,"file":"index.js","names":["React","PropTypes","BaseCarousel","BaseCarouselItem","BaseCarouselCaption","CAROUSEL_NEXT_LABEL_TEXT","CAROUSEL_PREV_LABEL_TEXT","Carousel","forwardRef","props","ref","createElement","_extends","CarouselItem","CarouselCaption","propTypes","as","elementType","activeIndex","number","defaultActiveIndex","controls","bool","fade","indicators","interval","keyboard","nextIcon","node","nextLabel","string","onSelect","func","onSlid","onSlide","pause","oneOf","prevIcon","prevLabel","slide","touch","wrap","bsPrefix","defaultProps","undefined","className","Item","Caption"],"sources":["../../src/Carousel/index.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport BaseCarousel from 'react-bootstrap/Carousel';\nimport BaseCarouselItem from 'react-bootstrap/CarouselItem';\nimport BaseCarouselCaption from 'react-bootstrap/CarouselCaption';\n\nexport const CAROUSEL_NEXT_LABEL_TEXT = 'Next';\nexport const CAROUSEL_PREV_LABEL_TEXT = 'Previous';\n\nconst Carousel = React.forwardRef((props, ref) => <BaseCarousel {...props} ref={ref} />);\n\nconst CarouselItem = React.forwardRef((props, ref) => <BaseCarouselItem {...props} ref={ref} />);\n\nconst CarouselCaption = React.forwardRef((props, ref) => <BaseCarouselCaption {...props} ref={ref} />);\n\nCarousel.propTypes = {\n  /** Specifies element type for this component. */\n  as: PropTypes.elementType,\n  /** Controls the current visible slide. Defaults to `defaultActiveIndex` prop */\n  activeIndex: PropTypes.number,\n  /** Specifies default active index prop */\n  defaultActiveIndex: PropTypes.number,\n  /** Show the `Carousel's` previous and next arrows for changing the current slide. */\n  controls: PropTypes.bool,\n  /** Animates slides with a crossfade animation instead of the default slide animation. */\n  fade: PropTypes.bool,\n  /** Show a set of slide position indicators. */\n  indicators: PropTypes.bool,\n  /** The amount of time to delay between automatically cycling an item. */\n  interval: PropTypes.number,\n  /** Specifies whether the `Carousel` should react to keyboard events. */\n  keyboard: PropTypes.bool,\n  /** Override the default button icon for the \"next\" control */\n  nextIcon: PropTypes.node,\n  /** Label shown to screen readers only, can be used to show the next element in the `Carousel` */\n  nextLabel: PropTypes.string,\n  /** Callback fired when the active item changes. */\n  onSelect: PropTypes.func,\n  /** Callback fired when a slide transition ends. */\n  onSlid: PropTypes.func,\n  /** Callback fired when a slide transition starts. */\n  onSlide: PropTypes.func,\n  /** If set to \"hover\", pauses the cycling of the `Carousel` on mouseenter and\n   * resumes the cycling of the carousel on mouseleave.\n   * If set to false, hovering over the `Carousel` won't pause it.\n   *\n   * On touch-enabled devices, when set to \"hover\", cycling will pause on touchend\n   * (once the user finished interacting with the `Carousel`) for two intervals,\n   * before automatically resuming. Note that this is in addition to the above mouse behavior.\n   */\n  pause: PropTypes.oneOf(['hover', false]),\n  /** Override the default button icon for the \"previous\" control */\n  prevIcon: PropTypes.node,\n  /** Label shown to screen readers only, can be used to show the\n   * previous element in the `Carousel`. Set to null to deactivate. */\n  prevLabel: PropTypes.string,\n  /** Enables animation on the Carousel as it transitions between slides. */\n  slide: PropTypes.bool,\n  /** Whether the `Carousel` should support left/right swipe interactions on touchscreen devices. */\n  touch: PropTypes.bool,\n  /** Whether the `Carousel` should cycle continuously or have hard stops */\n  wrap: PropTypes.bool,\n  /** Overrides underlying component base CSS class name */\n  bsPrefix: PropTypes.string,\n};\n\nCarouselItem.propTypes = {\n  /** Specifies element type for this component. */\n  as: PropTypes.elementType,\n  /** The amount of time to delay between automatically cycling this specific item.\n   * Will default to the `Carousel's` interval prop value if none is specified.\n   */\n  interval: PropTypes.number,\n  /** Overrides underlying component base CSS class name */\n  bsPrefix: PropTypes.string,\n};\n\nCarouselCaption.propTypes = {\n  /** Specifies element type for this component. */\n  as: PropTypes.elementType,\n  /** Overrides underlying component base CSS class name */\n  bsPrefix: PropTypes.string,\n};\n\nCarousel.defaultProps = {\n  as: 'div',\n  activeIndex: undefined,\n  defaultActiveIndex: 0,\n  controls: true,\n  fade: false,\n  indicators: true,\n  interval: 5000,\n  keyboard: true,\n  nextIcon: <span aria-hidden=\"true\" className=\"carousel-control-next-icon\" />,\n  nextLabel: CAROUSEL_NEXT_LABEL_TEXT,\n  onSelect: undefined,\n  onSlid: undefined,\n  onSlide: undefined,\n  pause: 'hover',\n  prevIcon: <span aria-hidden=\"true\" className=\"carousel-control-prev-icon\" />,\n  prevLabel: CAROUSEL_PREV_LABEL_TEXT,\n  slide: true,\n  touch: true,\n  wrap: true,\n  bsPrefix: 'carousel',\n};\n\nCarouselItem.defaultProps = {\n  as: 'div',\n  interval: undefined,\n  bsPrefix: 'carousel-item',\n};\n\nCarouselCaption.defaultProps = {\n  as: 'div',\n  bsPrefix: 'carousel-caption',\n};\n\nCarousel.Item = CarouselItem;\nCarousel.Caption = CarouselCaption;\n\nexport { CarouselItem };\nexport default Carousel;\n"],"mappings":"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","ignoreList":[]}