{"version":3,"file":"DefaultContent.js","names":["React","PropTypes","FormattedMessage","useIntl","getTypesString","formatBytes","messages","Icon","FileUpload","DefaultContent","_ref","accept","minSize","maxSize","intl","getFileRestrictionMessage","fileTypePart","fileSizePart","allTypes","lastTypeSeparatorLocation","lastIndexOf","formatMessage","fileTypeRestriction","count","firstPart","slice","secondPart","Number","isFinite","fileSizeBetween","sizeMin","sizeMax","fileSizeMax","fileSizeMin","concat","createElement","Fragment","className","src","id","description","defaultMessage","some","value","propTypes","objectOf","arrayOf","string","number","defaultProps","undefined"],"sources":["../../src/Dropzone/DefaultContent.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { getTypesString, formatBytes } from './utils';\nimport messages from './messages';\nimport Icon from '../Icon';\nimport { FileUpload } from '../../icons';\n\nfunction DefaultContent({ accept, minSize, maxSize }) {\n  const intl = useIntl();\n\n  const getFileRestrictionMessage = () => {\n    let fileTypePart;\n    let fileSizePart;\n\n    if (accept) {\n      const allTypes = getTypesString(accept);\n      const lastTypeSeparatorLocation = allTypes.lastIndexOf(',');\n      fileTypePart = intl.formatMessage(messages.fileTypeRestriction, {\n        count: lastTypeSeparatorLocation === -1 ? 1 : 2,\n        firstPart: lastTypeSeparatorLocation === -1 ? allTypes : allTypes.slice(0, lastTypeSeparatorLocation),\n        secondPart: lastTypeSeparatorLocation !== -1 && allTypes.slice(lastTypeSeparatorLocation + 1),\n      });\n    }\n\n    if (minSize && maxSize && Number.isFinite(maxSize)) {\n      fileSizePart = intl.formatMessage(messages.fileSizeBetween, {\n        sizeMin: formatBytes(minSize),\n        sizeMax: formatBytes(maxSize),\n      });\n    } else if (maxSize && Number.isFinite(maxSize)) {\n      fileSizePart = intl.formatMessage(messages.fileSizeMax, { sizeMax: formatBytes(maxSize) });\n    } else if (minSize) {\n      fileSizePart = intl.formatMessage(messages.fileSizeMin, { sizeMin: formatBytes(minSize) });\n    }\n\n    if (fileTypePart && fileSizePart) {\n      return `${fileTypePart} (${fileSizePart})`;\n    }\n    if (fileTypePart) {\n      return fileTypePart;\n    }\n    return fileSizePart;\n  };\n\n  return (\n    <>\n      <div className=\"pgn__dropzone__upload-icon-wrapper\">\n        <Icon src={FileUpload} className=\"pgn__dropzone__upload-icon\" />\n      </div>\n      <p>\n        <FormattedMessage\n          id=\"pgn.Dropzone.DefaultContent.label\"\n          description=\"A text that appears as a label for input of Dropzone component.\"\n          defaultMessage=\"Drag and drop your file here or click to upload.\"\n        />\n      </p>\n      {[accept, minSize, maxSize].some(value => value) && (\n        <p className=\"pgn__dropzone__upload-restriction-message\">\n          {getFileRestrictionMessage()}\n        </p>\n      )}\n    </>\n  );\n}\n\nDefaultContent.propTypes = {\n  accept: PropTypes.objectOf(PropTypes.arrayOf(PropTypes.string)),\n  maxSize: PropTypes.number,\n  minSize: PropTypes.number,\n};\n\nDefaultContent.defaultProps = {\n  accept: undefined,\n  maxSize: undefined,\n  minSize: undefined,\n};\n\nexport default DefaultContent;\n"],"mappings":"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","ignoreList":[]}