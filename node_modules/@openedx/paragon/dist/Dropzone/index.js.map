{"version":3,"file":"index.js","names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","minLen","_arrayLikeToArray","toString","Array","from","test","len","arr2","isArray","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","React","useState","PropTypes","classNames","useDropzone","ErrorCode","fromEvent","useIntl","DragError","GenericError","UploadProgress","DefaultContent","messages","getTypesString","isMultipleTypes","formatBytes","Dropzone","_ref","className","accept","minSize","maxSize","validator","errorMessages","progressVariant","inputComponent","onProcessUpload","onUploadProgress","onUploadCancel","props","_excluded","_useState","_useState2","isMultipleDragged","setIsMultipleDragged","_useState3","_useState4","errors","setErrors","_useState5","_useState6","progress","setProgress","_useState7","_useState8","fileName","setFileName","_useState9","_useState10","controller","setController","intl","uploadErrorMsg","uploadError","invalidSizeLessMsg","invalidSizeLess","invalidSizeMoreMsg","invalidSizeMore","invalidTypeMsg","invalidType","multipleDraggedMsg","multipleDragged","onDragEnter","_ref2","_callee","files","_callee$","_context","_x","onDragLeave","onDropRejected","map","code","FileTooLarge","formatMessage","size","FileTooSmall","FileInvalidType","count","typeString","unexpectedValidationError","handleProgressUpload","progressEvent","percentValue","Math","round","loaded","total","handleUploadError","processUpload","fileData","newController","AbortController","requestConfig","signal","handleError","onDropAccepted","_ref3","_callee2","file","customValidationError","formData","_callee2$","_context2","FormData","append","_x2","handleUploadCancel","abort","_useDropzone","multiple","maxFiles","disabled","getRootProps","getInputProps","isDragActive","isDragReject","renderContent","createElement","message","Fragment","errorMsgs","variant","percent","onCancel","_extends","defaultProps","Infinity","propTypes","string","objectOf","arrayOf","number","func","isRequired","shape","oneOfType","element","oneOf","elementType","node"],"sources":["../../src/Dropzone/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useDropzone, ErrorCode } from 'react-dropzone';\nimport { fromEvent } from 'file-selector';\nimport { useIntl } from 'react-intl';\n\nimport DragError from './DragError';\nimport GenericError from './GenericError';\nimport UploadProgress from './UploadProgress';\nimport DefaultContent from './DefaultContent';\nimport messages from './messages';\nimport { getTypesString, isMultipleTypes, formatBytes } from './utils';\n\nfunction Dropzone({\n  className, accept, minSize, maxSize, validator,\n  errorMessages, progressVariant, inputComponent,\n  onProcessUpload, onUploadProgress, onUploadCancel,\n  ...props\n}) {\n  const [isMultipleDragged, setIsMultipleDragged] = useState(false);\n  const [errors, setErrors] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const [fileName, setFileName] = useState(undefined);\n  const [controller, setController] = useState(undefined);\n  const intl = useIntl();\n\n  const {\n    uploadError: uploadErrorMsg,\n    invalidSizeLess: invalidSizeLessMsg,\n    invalidSizeMore: invalidSizeMoreMsg,\n    invalidType: invalidTypeMsg,\n    multipleDragged: multipleDraggedMsg,\n  } = errorMessages;\n\n  const onDragEnter = async (e) => {\n    if (errors) {\n      setErrors([]);\n    }\n    const files = await fromEvent(e);\n    if (files && files.length > 1) {\n      setIsMultipleDragged(true);\n    }\n  };\n\n  const onDragLeave = () => {\n    if (isMultipleDragged) {\n      setIsMultipleDragged(false);\n    }\n  };\n\n  const onDropRejected = (files) => {\n    if (!isMultipleDragged) {\n      setErrors(files[0].errors.map(error => {\n        switch (error.code) {\n          case ErrorCode.FileTooLarge:\n            return invalidSizeMoreMsg || intl.formatMessage(messages.invalidSizeMore, { size: formatBytes(maxSize) });\n          case ErrorCode.FileTooSmall:\n            return invalidSizeLessMsg || intl.formatMessage(messages.invalidSizeLess, { size: formatBytes(minSize) });\n          case ErrorCode.FileInvalidType:\n            return invalidTypeMsg || intl.formatMessage(\n              messages.invalidType,\n              { count: isMultipleTypes(accept) ? 2 : 1, typeString: getTypesString(accept) },\n            );\n          default:\n            return intl.formatMessage(messages.unexpectedValidationError);\n        }\n      }));\n    } else {\n      setIsMultipleDragged(false);\n    }\n  };\n\n  const handleProgressUpload = (progressEvent) => {\n    const percentValue = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n    setProgress(percentValue);\n    onUploadProgress(percentValue, progressEvent);\n  };\n\n  const handleUploadError = (error) => {\n    // check if request has been canceled before treating the exception as an upload error\n    if (error.code !== 'ERR_CANCELED') {\n      setProgress(0);\n      setErrors([uploadErrorMsg || intl.formatMessage(messages.uploadError)]);\n    }\n  };\n\n  const processUpload = (fileData) => {\n    const newController = new AbortController();\n    setController(newController);\n\n    const requestConfig = {\n      onUploadProgress: handleProgressUpload,\n      signal: newController.signal,\n    };\n\n    onProcessUpload({\n      fileData,\n      requestConfig,\n      handleError: handleUploadError,\n    });\n  };\n\n  const onDropAccepted = async (files) => {\n    const file = files[0];\n    if (validator) {\n      const customValidationError = await validator(file);\n      if (customValidationError) {\n        setErrors([customValidationError]);\n        return;\n      }\n    }\n\n    if (errors) {\n      setErrors([]);\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n    setFileName(file.name);\n\n    processUpload(formData);\n  };\n\n  const handleUploadCancel = () => {\n    controller.abort();\n    setProgress(0);\n    onUploadCancel();\n  };\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragReject,\n  } = useDropzone({\n    multiple: false,\n    maxFiles: 1,\n    maxSize,\n    minSize,\n    onDragLeave,\n    onDragEnter,\n    onDropRejected,\n    onDropAccepted,\n    accept,\n    disabled: progress && progress !== 100,\n  });\n\n  const renderContent = () => {\n    if (isMultipleDragged) {\n      return <DragError message={multipleDraggedMsg || intl.formatMessage(messages.multipleDragged)} />;\n    }\n\n    if (errors.length > 0) {\n      return (\n        <>\n          <GenericError errorMsgs={errors} />\n          {inputComponent || <DefaultContent minSize={minSize} maxSize={maxSize} accept={accept} />}\n        </>\n      );\n    }\n\n    if (progress && progress !== 100) {\n      return (\n        <UploadProgress\n          variant={progressVariant}\n          percent={progress}\n          name={fileName}\n          onCancel={handleUploadCancel}\n        />\n      );\n    }\n\n    return inputComponent || <DefaultContent minSize={minSize} maxSize={maxSize} accept={accept} />;\n  };\n\n  return (\n    <div\n      data-testid=\"dropzone-container\"\n      {...getRootProps({\n        className: classNames('pgn__dropzone', className, {\n          'pgn__dropzone-validation-error': isMultipleDragged || errors.length > 0 || isDragReject,\n          'pgn__dropzone-active': isDragActive && !isDragReject,\n        }),\n      })}\n      {...props}\n    >\n      <input {...getInputProps()} />\n      <div className=\"d-flex flex-column justify-content-around align-items-center w-100\">\n        {renderContent()}\n      </div>\n    </div>\n  );\n}\n\nDropzone.defaultProps = {\n  className: undefined,\n  accept: undefined,\n  maxSize: Infinity,\n  minSize: 0,\n  onUploadProgress: () => {},\n  onUploadCancel: () => {},\n  errorMessages: {\n    invalidType: undefined,\n    invalidSizeLess: undefined,\n    invalidSizeMore: undefined,\n    multipleDragged: undefined,\n    uploadError: undefined,\n  },\n  progressVariant: 'spinner',\n  validator: undefined,\n  inputComponent: undefined,\n};\n\nDropzone.propTypes = {\n  /** Specifies class name to append to the base element. */\n  className: PropTypes.string,\n  /**\n   * Set accepted file types.\n   * This should be an object with the keys set to the\n   * [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types)\n   * and the values to an array of file extensions.\n   */\n  accept: PropTypes.objectOf(PropTypes.arrayOf(PropTypes.string)),\n  /** Maximum file size (in bytes). */\n  maxSize: PropTypes.number,\n  /** Minimum file size (in bytes). */\n  minSize: PropTypes.number,\n  /**\n   * A callback fired each time an upload progress event happens,\n   * receives (percentageUploaded, progressEvent) as arguments.\n   */\n  onUploadProgress: PropTypes.func,\n  /** A callback fired upon successful upload, receives Response object as a single argument. */\n  onUploadCancel: PropTypes.func,\n  /**\n   * A function responsible for uploading the file.\n   * Receives following object as its only argument\n   * {\n   *   @param {object} fileData - Metadata about the uploaded file.\n   *   @param {object} requestConfig - Config to pass to `axios` call.\n   *   @param {function} handleError - Function to communicate to `Dropzone` that file upload resulted in failure,\n   *   expects `Error` object to be passed as its only argument.\n   * }\n   */\n  onProcessUpload: PropTypes.func.isRequired,\n  /**\n   * An object containing error messages, following are supported:\n   * 1) invalidType - A message to display when file of invalid type is dropped into `Dropzone`.\n   * Defaults to 'The file type must be {filType} file / one of {fileTypes} files.'.\n   * 2) invalidSizeLess - A message to display when file of size less than minSize value is dropped into `Dropzone`.\n   * Defaults to 'File must be larger than {minSize}.'.\n   * 3) invalidSizeMore - A message to display when file of size greater than maxSize value is dropped into `Dropzone`.\n   * Defaults to 'File must be less than {maxSize}.'.\n   * 4) multipleDragged - A message to display when multiple files are dragged over `Dropzone`.\n   * 5) uploadError - A message to display in case upload results in an error\n   */\n  errorMessages: PropTypes.shape({\n    invalidType: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    invalidSizeLess: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    invalidSizeMore: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    multipleDragged: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    uploadError: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  }),\n  /** Specifies how the upload progress should be displayed, component shows either spinner or a progress bar. */\n  progressVariant: PropTypes.oneOf(['spinner', 'bar']),\n  /**\n   * Custom validation function, receives `File` object as its only argument.\n   * Note that this function will be invoked as a last validation step before beginning an upload process.\n   */\n  validator: PropTypes.func,\n  /** A component to display initial state of the `Dropzone`. */\n  inputComponent: PropTypes.oneOfType([PropTypes.elementType, PropTypes.node]),\n};\n\nexport default Dropzone;\n"],"mappings":"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","ignoreList":[]}