{"version":3,"file":"index.js","names":["React","useState","classNames","PropTypes","BaseToast","useIntl","Close","ToastContainer","Button","Icon","IconButton","TOAST_CLOSE_LABEL_TEXT","TOAST_DELAY","Toast","_ref","action","children","className","closeLabel","onClose","show","rest","_objectWithoutProperties","_excluded","intl","_useState","_useState2","_slicedToArray","autoHide","setAutoHide","intlCloseLabel","formatMessage","id","defaultMessage","description","createElement","_extends","autohide","onBlur","onFocus","onMouseOut","onMouseOver","iconAs","alt","src","onClick","variant","invertColors","as","href","size","label","defaultProps","undefined","delay","propTypes","string","isRequired","func","bool","shape","number"],"sources":["../../src/Toast/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport BaseToast from 'react-bootstrap/Toast';\nimport { useIntl } from 'react-intl';\n\nimport { Close } from '../../icons';\nimport ToastContainer from './ToastContainer';\nimport Button from '../Button';\nimport Icon from '../Icon';\nimport IconButton from '../IconButton';\n\nexport const TOAST_CLOSE_LABEL_TEXT = 'Close';\nexport const TOAST_DELAY = 5000;\n\nfunction Toast({\n  action, children, className, closeLabel, onClose, show, ...rest\n}) {\n  const intl = useIntl();\n  const [autoHide, setAutoHide] = useState(true);\n  const intlCloseLabel = closeLabel || intl.formatMessage({\n    id: 'pgn.Toast.closeLabel',\n    defaultMessage: 'Close',\n    description: 'Close label for Toast component',\n  });\n  return (\n    <ToastContainer>\n      <BaseToast\n        autohide={autoHide}\n        className={classNames('pgn__toast', className)}\n        onClose={onClose}\n        onBlur={() => setAutoHide(true)}\n        onFocus={() => setAutoHide(false)}\n        onMouseOut={() => setAutoHide(true)}\n        onMouseOver={() => setAutoHide(false)}\n        show={show}\n        {...rest}\n      >\n        <div\n          className=\"toast-header\"\n        >\n          <p className=\"small\">{children}</p>\n          <div className=\"toast-header-btn-container\">\n            <IconButton\n              iconAs={Icon}\n              alt={intlCloseLabel}\n              className=\"align-self-start\"\n              src={Close}\n              onClick={onClose}\n              variant=\"primary\"\n              invertColors\n            />\n          </div>\n        </div>\n        {action && (\n          <Button\n            as={action.href ? 'a' : 'button'}\n            href={action.href}\n            onClick={action.onClick}\n            size=\"sm\"\n            variant=\"inverse-outline-primary\"\n          >\n            {action.label}\n          </Button>\n        )}\n      </BaseToast>\n    </ToastContainer>\n  );\n}\n\nToast.defaultProps = {\n  action: null,\n  closeLabel: undefined,\n  delay: TOAST_DELAY,\n  className: undefined,\n};\n\nToast.propTypes = {\n  /** A string or an element that is rendered inside the main body of the `Toast`. */\n  children: PropTypes.string.isRequired,\n  /**\n   * A function that is called on close. It can be used to perform\n   * actions upon closing of the `Toast`, such as setting the \"show\"\n   * element to false.\n   * */\n  onClose: PropTypes.func.isRequired,\n  /** Boolean used to control whether the `Toast` shows */\n  show: PropTypes.bool.isRequired,\n  /**\n   * Fields used to build optional action button.\n   * `label` is a string rendered inside the button.\n   * `href` is a link that will render the action button as an anchor tag.\n   * `onClick` is a function that is called when the button is clicked.\n   */\n  action: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    href: PropTypes.string,\n    onClick: PropTypes.func,\n  }),\n  /**\n   * Alt text for the `Toast`'s dismiss button. Defaults to 'Close'.\n   */\n  closeLabel: PropTypes.string,\n  /** Time in milliseconds for which the `Toast` will display. */\n  delay: PropTypes.number,\n  /** Class names for the `BaseToast` component */\n  className: PropTypes.string,\n};\n\nexport default Toast;\n"],"mappings":"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","ignoreList":[]}