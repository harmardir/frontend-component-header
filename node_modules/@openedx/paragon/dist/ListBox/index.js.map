{"version":3,"file":"index.js","names":["classNames","PropTypes","React","nonNegativeInteger","ListBox","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","onFocus","bind","_assertThisInitialized","onKeyDown","state","selectedOptionIndex","_createClass","key","value","setState","e","preventDefault","Children","count","children","renderChildren","_this2","map","child","index","cloneElement","isSelected","onSelect","render","_this$props","className","tag","other","_objectWithoutProperties","_excluded","createElement","_objectSpread","concat","role","tabIndex","getDerivedStateFromProps","nextProps","prevState","undefined","Component","default","propTypes","node","isRequired","string","defaultProps"],"sources":["../../src/ListBox/index.jsx"],"sourcesContent":["/* eslint-disable max-len */\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { nonNegativeInteger } from '../utils/propTypes';\n\nexport default class ListBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onFocus = this.onFocus.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n\n    this.state = {\n      selectedOptionIndex: null,\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { selectedOptionIndex } = nextProps;\n\n    if (selectedOptionIndex !== prevState.selectedOptionIndex\n      && selectedOptionIndex !== undefined) {\n      return { selectedOptionIndex };\n    }\n\n    return null;\n  }\n\n  onFocus() {\n    // if no ListBoxOption is selected, select first ListBoxOption on ListBox focus\n    if (!this.state.selectedOptionIndex) {\n      this.setState({\n        selectedOptionIndex: 0,\n      });\n    }\n  }\n\n  onKeyDown(e) {\n    switch (e.key) {\n      case 'ArrowDown': {\n        // prevent scrolling entire modal body with arrow keys\n        e.preventDefault();\n        if (this.state.selectedOptionIndex < React.Children.count(this.props.children) - 1) {\n          this.setState(state => ({\n            selectedOptionIndex: state.selectedOptionIndex + 1,\n          }));\n        }\n        break;\n      }\n      case 'ArrowUp': {\n        // prevent scrolling entire modal body with arrow keys\n        e.preventDefault();\n\n        if (this.state.selectedOptionIndex > 0) {\n          this.setState(state => ({\n            selectedOptionIndex: state.selectedOptionIndex - 1,\n          }));\n        }\n        break;\n      }\n      default:\n    }\n  }\n\n  renderChildren() {\n    return React.Children.map(this.props.children, (child, index) => React.cloneElement(child, {\n      index,\n      isSelected: index === this.state.selectedOptionIndex,\n      onSelect: () => { this.setState({ selectedOptionIndex: index }); child.props.onSelect(); },\n    }));\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      selectedOptionIndex,\n      tag,\n      ...other\n    } = this.props;\n\n    return React.createElement(\n      this.props.tag,\n      {\n        'aria-activedescendant': this.state.selectedOptionIndex === null ? null : `list-box-option-${this.state.selectedOptionIndex}`,\n        className: classNames(['list-group', this.props.className]),\n        onFocus: this.onFocus,\n        onKeyDown: this.onKeyDown,\n        role: 'listbox',\n        tabIndex: 0,\n        ...other,\n      },\n      this.renderChildren(),\n    );\n  }\n}\n\nListBox.propTypes = {\n  /** specifies the ListBoxOption component(s) that will be displayed within the ListBox element. You can pass in one or more ListBoxOption components.\n */\n  children: PropTypes.node.isRequired,\n  /** specifies Bootstrap class names to apply to the ListBox component. The default is an empty string. */\n  className: PropTypes.string,\n  /** Although the ListBox component keeps track of which ListBoxOption is selected, `selectedOptionIndex` provides a mechanism for an override, if necessary. An example would be to clear the selectedOption when moving between views. Note that override is not permanent and that clicking on a ListBoxOption or interacting with the ListBox with the keyboard will change the selected ListBoxOption relative to the original override. The default is undefined. */\n  selectedOptionIndex: nonNegativeInteger,\n  /** used to specify the element type of the rendered ListBox component. The default is div. Example alternatives include ol, ul, span, etc. */\n  tag: PropTypes.string,\n};\n\nListBox.defaultProps = {\n  className: undefined,\n  selectedOptionIndex: undefined,\n  tag: 'div',\n};\n"],"mappings":"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","ignoreList":[]}