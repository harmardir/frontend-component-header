{"version":3,"file":"index.js","names":["React","classNames","PropTypes","withDeprecatedProps","DeprTypes","DeprecatedButton","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","onBlur","onKeyDown","bind","_assertThisInitialized","onClick","setRefs","_createClass","key","value","e","buttonRef","focus","input","inputRef","render","_this$props","buttonType","className","children","isClose","type","other","_objectWithoutProperties","_excluded","createElement","_extends","_defineProperty","concat","undefined","close","ref","Component","buttonPropTypes","string","node","isRequired","oneOfType","func","shape","current","instanceOf","element","bool","variant","oneOf","propTypes","defaultProps","label","deprType","MOVED","newName","FORMAT","expect","transform","Array","isArray","join","message"],"sources":["../../../src/Button/deprecated/index.jsx"],"sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport withDeprecatedProps, { DeprTypes } from '../../withDeprecatedProps';\n\nclass DeprecatedButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {\n      onBlur,\n      onKeyDown,\n    } = props;\n\n    this.onBlur = onBlur.bind(this);\n    this.onKeyDown = onKeyDown.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.setRefs = this.setRefs.bind(this);\n  }\n\n  /*\n    The button component is given focus explicitly in its onClick to account\n    for the fact that an HTML <button> element in Firefox and Safari does not get\n    focus on onClick.\n\n    See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button.\n  */\n  onClick(e) {\n    this.buttonRef.focus();\n    this.props.onClick(e);\n  }\n\n  /*\n    The button component needs a ref to itself to be able to force\n    focus in its onClick function (buttonRef). It also needs to accept\n    a callback function from parent components to give those parents\n    a reference to their child button (e.g. for the modal component).\n    Therefore, both have been wrapped in a function bound on the class,\n    since one cannot set two ref attributes on a component.\n  */\n  setRefs(input) {\n    this.buttonRef = input;\n    this.props.inputRef(input);\n  }\n\n  render() {\n    const {\n      buttonType,\n      className,\n      children,\n      isClose,\n      type,\n      /* inputRef is not used directly in the render, but it needs to be assigned\n        here to prevent it from being passed to the HTML button component as part\n        of other.\n      */\n      inputRef,\n      ...other\n    } = this.props;\n\n    return (\n      <button\n        {...other}\n        className={classNames([\n          'btn',\n          className,\n        ], {\n          [`btn-${buttonType}`]: buttonType !== undefined,\n        }, {\n          close: isClose,\n        })}\n        onBlur={this.onBlur}\n        onClick={this.onClick}\n        onKeyDown={this.onKeyDown}\n        // eslint-disable-next-line react/button-has-type\n        type={type}\n        ref={this.setRefs}\n\n      >\n        {children}\n      </button>\n    );\n  }\n}\n\nexport const buttonPropTypes = {\n  /** Used to determine the type of button to be rendered.  See [Bootstrap's buttons documentation](https://getbootstrap.com/docs/4.0/components/buttons/) for a list of applicable button types. For example, `buttonType=\"light\"`. The default is `undefined`. */\n  buttonType: PropTypes.string,\n  /** Specifies Bootstrap class names to apply to the button. See [Bootstrap's buttons documentation](https://getbootstrap.com/docs/4.0/components/buttons/) for a list of applicable class names. The default is an empty array. */\n  className: PropTypes.string,\n  /** Specifies the text that is displayed within the button. */\n  children: PropTypes.node.isRequired,\n  // eslint-disable-next-line max-len\n  /** A function that defines a reference for the button. An example `inputRef` from the calling component could look something like: `inputRef={(input) => { this.button = input; }}`. The default is an empty function. */\n  inputRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(PropTypes.element) }),\n  ]),\n  /** Used to determine if the button is a \"Close\" style button to leverage bootstrap styling. Example use case is with the Status Alert [dismiss button](https://getbootstrap.com/docs/4.0/components/alerts/#dismissing). The default is false. */\n  isClose: PropTypes.bool,\n  // eslint-disable-next-line max-len\n  /** A function that would specify what the button should do when the `onBlur` event is triggered. For example, the button could change in color or `buttonType` when focus is changed. The default is an empty function. */\n  onBlur: PropTypes.func,\n  // eslint-disable-next-line max-len\n  /** A function that would specify what the button should do when the `onClick` event is triggered. For example, the button could launch a `Modal`. The default is an empty function. */\n  onClick: PropTypes.func,\n  // eslint-disable-next-line max-len\n  /** A function that would specify what the button should do when the `onKeyDown` event is triggered.  For example, this could handle using the `Escape` key to trigger the button's action. The default is an empty function. */\n  onKeyDown: PropTypes.func,\n  /** Used to set the `type` attribute on the `button` tag.  The default type is `button`. */\n  type: PropTypes.string,\n  /** Specifies variant to use. */\n  variant: PropTypes.oneOf([\n    'primary', 'secondary', 'success', 'danger', 'warning', 'info', 'dark', 'light', 'link', 'outline-primary',\n    'outline-secondary', 'outline-success', 'outline-danger', 'outline-warning', 'outline-info', 'outline-dark', 'outline-light',\n  ]),\n};\n\nDeprecatedButton.propTypes = buttonPropTypes;\n\nDeprecatedButton.defaultProps = {\n  buttonType: undefined,\n  className: undefined,\n  inputRef: () => {},\n  isClose: false,\n  onBlur: () => {},\n  onKeyDown: () => {},\n  onClick: () => {},\n  type: 'button',\n  variant: 'outline-primary',\n};\n\nexport default withDeprecatedProps(DeprecatedButton, 'Button', {\n  label: {\n    deprType: DeprTypes.MOVED,\n    newName: 'children',\n  },\n  className: {\n    deprType: DeprTypes.FORMAT,\n    expect: value => typeof value === 'string',\n    transform: value => (Array.isArray(value) ? value.join(' ') : value),\n    message: 'It should be a string.',\n  },\n});\n"],"mappings":"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","ignoreList":[]}