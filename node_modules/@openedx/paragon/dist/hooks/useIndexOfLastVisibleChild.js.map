{"version":3,"file":"useIndexOfLastVisibleChild.js","names":["useLayoutEffect","useState","useIndexOfLastVisibleChild","containerElementRef","overflowElementRef","_useState","_useState2","_slicedToArray","indexOfLastVisibleChild","setIndexOfLastVisibleChild","updateLastVisibleChildIndex","childNodesArr","Array","prototype","slice","call","children","_childNodesArr$filter","filter","childNode","reduce","acc","index","sumWidth","getBoundingClientRect","width","nextIndexOfLastVisibleChild","resizeObserver","ResizeObserver","observe","disconnect","undefined"],"sources":["../../src/hooks/useIndexOfLastVisibleChild.jsx"],"sourcesContent":["import { useLayoutEffect, useState } from 'react';\n\n/**\n * This hook will find the index of the last child of a containing element\n * that fits within its bounding rectangle. This is done by summing the widths\n * of the children until they exceed the width of the container.\n *\n * @param {Element} containerElementRef - container element\n * @param {Element} overflowElementRef - overflow element\n *\n * The hook returns the index of the last visible child.\n */\nconst useIndexOfLastVisibleChild = (containerElementRef, overflowElementRef) => {\n  const [indexOfLastVisibleChild, setIndexOfLastVisibleChild] = useState(-1);\n\n  useLayoutEffect(() => {\n    function updateLastVisibleChildIndex() {\n      // Get array of child nodes from NodeList form\n      const childNodesArr = Array.prototype.slice.call(containerElementRef.children);\n      const { nextIndexOfLastVisibleChild } = childNodesArr\n        // filter out the overflow element\n        .filter(childNode => childNode !== overflowElementRef)\n        // sum the widths to find the last visible element's index\n        .reduce((acc, childNode, index) => {\n          acc.sumWidth += childNode.getBoundingClientRect().width;\n          if (acc.sumWidth <= containerElementRef.getBoundingClientRect().width) {\n            acc.nextIndexOfLastVisibleChild = index;\n          }\n          return acc;\n        }, {\n          // Include the overflow element's width to begin with. Doing this means\n          // sometimes we'll show a dropdown with one item in it when it would fit,\n          // but allowing this case dramatically simplifies the calculations we need\n          // to do above.\n          sumWidth: overflowElementRef ? overflowElementRef.getBoundingClientRect().width : 0,\n          nextIndexOfLastVisibleChild: -1,\n        });\n\n      setIndexOfLastVisibleChild(nextIndexOfLastVisibleChild);\n    }\n\n    if (containerElementRef) {\n      updateLastVisibleChildIndex();\n\n      const resizeObserver = new ResizeObserver(() => updateLastVisibleChildIndex());\n      resizeObserver.observe(containerElementRef);\n\n      return () => resizeObserver.disconnect();\n    }\n\n    return undefined;\n  }, [containerElementRef, overflowElementRef]);\n\n  return indexOfLastVisibleChild;\n};\n\nexport default useIndexOfLastVisibleChild;\n"],"mappings":";;;;;;AAAA,SAASA,eAAe,EAAEC,QAAQ,QAAQ,OAAO;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA0BA,CAAIC,mBAAmB,EAAEC,kBAAkB,EAAK;EAC9E,IAAAC,SAAA,GAA8DJ,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnEG,uBAAuB,GAAAF,UAAA;IAAEG,0BAA0B,GAAAH,UAAA;EAE1DN,eAAe,CAAC,YAAM;IACpB,SAASU,2BAA2BA,CAAA,EAAG;MACrC;MACA,IAAMC,aAAa,GAAGC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACZ,mBAAmB,CAACa,QAAQ,CAAC;MAC9E,IAAAC,qBAAA,GAAwCN;QACtC;QAAA,CACCO,MAAM,CAAC,UAAAC,SAAS;UAAA,OAAIA,SAAS,KAAKf,kBAAkB;QAAA;QACrD;QAAA,CACCgB,MAAM,CAAC,UAACC,GAAG,EAAEF,SAAS,EAAEG,KAAK,EAAK;UACjCD,GAAG,CAACE,QAAQ,IAAIJ,SAAS,CAACK,qBAAqB,CAAC,CAAC,CAACC,KAAK;UACvD,IAAIJ,GAAG,CAACE,QAAQ,IAAIpB,mBAAmB,CAACqB,qBAAqB,CAAC,CAAC,CAACC,KAAK,EAAE;YACrEJ,GAAG,CAACK,2BAA2B,GAAGJ,KAAK;UACzC;UACA,OAAOD,GAAG;QACZ,CAAC,EAAE;UACD;UACA;UACA;UACA;UACAE,QAAQ,EAAEnB,kBAAkB,GAAGA,kBAAkB,CAACoB,qBAAqB,CAAC,CAAC,CAACC,KAAK,GAAG,CAAC;UACnFC,2BAA2B,EAAE,CAAC;QAChC,CAAC,CAAC;QAjBIA,2BAA2B,GAAAT,qBAAA,CAA3BS,2BAA2B;MAmBnCjB,0BAA0B,CAACiB,2BAA2B,CAAC;IACzD;IAEA,IAAIvB,mBAAmB,EAAE;MACvBO,2BAA2B,CAAC,CAAC;MAE7B,IAAMiB,cAAc,GAAG,IAAIC,cAAc,CAAC;QAAA,OAAMlB,2BAA2B,CAAC,CAAC;MAAA,EAAC;MAC9EiB,cAAc,CAACE,OAAO,CAAC1B,mBAAmB,CAAC;MAE3C,OAAO;QAAA,OAAMwB,cAAc,CAACG,UAAU,CAAC,CAAC;MAAA;IAC1C;IAEA,OAAOC,SAAS;EAClB,CAAC,EAAE,CAAC5B,mBAAmB,EAAEC,kBAAkB,CAAC,CAAC;EAE7C,OAAOI,uBAAuB;AAChC,CAAC;AAED,eAAeN,0BAA0B","ignoreList":[]}