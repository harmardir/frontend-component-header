{"version":3,"file":"index.js","names":["React","useRef","useEffect","PropTypes","classNames","SelectableBoxSet","useCheckboxSetContext","useRadioSetContext","getInputType","INPUT_TYPES","SelectableBox","forwardRef","_ref","ref","type","value","checked","children","isIndeterminate","isInvalid","onClick","onFocus","inputHidden","className","showActiveBoxState","props","_objectWithoutProperties","_excluded","inputType","_useRadioSetContext","radioValue","_useCheckboxSetContex","_useCheckboxSetContex2","checkboxValues","isChecked","includes","inputRef","input","createElement","_objectSpread","hidden","tabIndex","onChange","current","onclick","_extends","role","onKeyPress","click","propTypes","node","isRequired","oneOfType","string","number","bool","oneOf","func","defaultProps","undefined","Set"],"sources":["../../src/SelectableBox/index.jsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport SelectableBoxSet from './SelectableBoxSet';\nimport { useCheckboxSetContext } from '../Form/FormCheckboxSetContext';\nimport { useRadioSetContext } from '../Form/FormRadioSetContext';\nimport { getInputType } from './utils';\n\nconst INPUT_TYPES = [\n  'radio',\n  'checkbox',\n];\n\nconst SelectableBox = React.forwardRef(({\n  type,\n  value,\n  checked,\n  children,\n  isIndeterminate,\n  isInvalid,\n  onClick,\n  onFocus,\n  inputHidden,\n  className,\n  showActiveBoxState,\n  ...props\n}, ref) => {\n  const inputType = getInputType('SelectableBox', type);\n  const { value: radioValue } = useRadioSetContext();\n  const { value: checkboxValues = [] } = useCheckboxSetContext();\n\n  const isChecked = () => {\n    switch (type) {\n      case 'radio':\n        return radioValue === value;\n      case 'checkbox':\n        return checkboxValues.includes(value);\n      default:\n        return radioValue === value;\n    }\n  };\n\n  const inputRef = useRef(null);\n  const input = React.createElement(inputType, {\n    value,\n    checked,\n    hidden: inputHidden,\n    ref: inputRef,\n    tabIndex: -1,\n    onChange: () => {},\n    ...(type === 'checkbox' ? { ...props, isIndeterminate } : { ...props }),\n  }, null);\n\n  useEffect(() => {\n    if (onClick && inputRef.current) {\n      inputRef.current.onclick = () => onClick(inputRef.current);\n    }\n  }, [onClick]);\n\n  return (\n    <div\n      role=\"button\"\n      onKeyPress={() => inputRef.current.click()}\n      onClick={() => inputRef.current.click()}\n      onFocus={onFocus}\n      className={classNames('pgn__selectable_box', className, {\n        'pgn__selectable_box-active': (!inputHidden && !showActiveBoxState) ? false : isChecked() || checked,\n        'pgn__selectable_box-invalid': isInvalid,\n      })}\n      tabIndex={0}\n      ref={ref}\n      {...props}\n    >\n      {input}\n      {children}\n    </div>\n  );\n});\n\nSelectableBox.propTypes = {\n  /** Content of the `SelectableBox`. */\n  children: PropTypes.node.isRequired,\n  /** A value that is passed to the input tag. */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /** Controls whether `SelectableBox` is checked. */\n  checked: PropTypes.bool,\n  /** Indicates the input type: checkbox or radio. */\n  type: PropTypes.oneOf(INPUT_TYPES),\n  /** Function that is called when the `SelectableBox` is clicked. */\n  onClick: PropTypes.func,\n  /** Function that is called when the `SelectableBox` is focused. */\n  onFocus: PropTypes.func,\n  /** Controls display of the input (checkbox or radio button) on the `SelectableBox`. */\n  inputHidden: PropTypes.bool,\n  /** Indicates a state for the 'checkbox' `type` when `SelectableBox` is neither checked nor unchecked. */\n  isIndeterminate: PropTypes.bool,\n  /** Adds errors styles to the `SelectableBox`. */\n  isInvalid: PropTypes.bool,\n  /** A class that is appended to the base element. */\n  className: PropTypes.string,\n  /** Controls the visibility of the active state for the `SelectableBox`. */\n  showActiveBoxState: PropTypes.bool,\n};\n\nSelectableBox.defaultProps = {\n  value: undefined,\n  checked: false,\n  type: 'radio',\n  onClick: () => {},\n  onFocus: () => {},\n  inputHidden: true,\n  isIndeterminate: false,\n  isInvalid: false,\n  className: undefined,\n  showActiveBoxState: true,\n};\n\nSelectableBox.Set = SelectableBoxSet;\nexport default SelectableBox;\n"],"mappings":"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","ignoreList":[]}