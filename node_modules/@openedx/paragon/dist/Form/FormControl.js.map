{"version":3,"file":"FormControl.js","names":["React","useCallback","useEffect","PropTypes","classNames","RBFormControl","IMaskInput","useFormGroupContext","FormControlFeedback","FormControlDecoratorGroup","callAllHandlers","useHasValue","FormControl","forwardRef","_ref","ref","as","className","controlClassName","leadingElement","trailingElement","floatingLabel","autoResize","onChange","inputMask","props","_objectWithoutProperties","_excluded","_useFormGroupContext","isInvalid","isValid","getControlProps","formGroupContext","_excluded2","inputRef","useRef","resolvedRef","size","_useHasValue","defaultValue","value","_useHasValue2","_slicedToArray","hasValue","checkInputEventValue","handleResize","current","initialHeight","offsets","offsetHeight","clientHeight","style","height","concat","scrollHeight","controlProps","_objectSpread","onBlur","handleOnChange","e","createElement","_extends","mask","SIZE_CHOICES","Feedback","Description","propTypes","string","elementType","func","oneOfType","number","id","oneOf","node","plaintext","bool","defaultProps","undefined"],"sources":["../../src/Form/FormControl.jsx"],"sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport RBFormControl from 'react-bootstrap/FormControl';\nimport { IMaskInput } from 'react-imask';\nimport { useFormGroupContext } from './FormGroupContext';\nimport FormControlFeedback from './FormControlFeedback';\nimport FormControlDecoratorGroup from './FormControlDecoratorGroup';\n\nimport { callAllHandlers, useHasValue } from './fieldUtils';\n\nconst FormControl = React.forwardRef(({\n  as,\n  className,\n  controlClassName,\n  leadingElement,\n  trailingElement,\n  floatingLabel,\n  autoResize,\n  onChange,\n  inputMask,\n  ...props\n}, ref) => {\n  const {\n    isInvalid,\n    isValid,\n    getControlProps,\n    ...formGroupContext\n  } = useFormGroupContext();\n  const inputRef = React.useRef();\n  const resolvedRef = ref || inputRef;\n  const size = props.size || formGroupContext.size;\n\n  const [hasValue, checkInputEventValue] = useHasValue({\n    defaultValue: props.defaultValue,\n    value: props.value,\n  });\n\n  const handleResize = useCallback(() => {\n    if (as === 'textarea' && autoResize) {\n      if (!resolvedRef.current.initialHeight && !resolvedRef.current.offsets) {\n        resolvedRef.current.initialHeight = resolvedRef.current.offsetHeight;\n        resolvedRef.current.offsets = resolvedRef.current.offsetHeight - resolvedRef.current.clientHeight;\n      }\n      resolvedRef.current.style.height = `${resolvedRef.current.initialHeight}px`;\n      resolvedRef.current.style.height = `${resolvedRef.current.scrollHeight + resolvedRef.current.offsets}px`;\n    }\n  }, [as, autoResize, resolvedRef]);\n\n  useEffect(() => {\n    handleResize();\n  }, [handleResize]);\n\n  const controlProps = getControlProps({\n    ...props,\n    // eslint-disable-next-line react/prop-types\n    onBlur: callAllHandlers(checkInputEventValue, props.onBlur),\n  });\n\n  const handleOnChange = (e) => {\n    handleResize();\n    if (onChange) {\n      onChange(e);\n    }\n  };\n\n  return (\n    <FormControlDecoratorGroup\n      size={size}\n      leadingElement={leadingElement}\n      trailingElement={trailingElement}\n      floatingLabel={floatingLabel}\n      className={className}\n    >\n      <RBFormControl\n        as={inputMask ? IMaskInput : as}\n        ref={resolvedRef}\n        size={size}\n        isInvalid={isInvalid}\n        isValid={isValid}\n        className={classNames(controlClassName, {\n          'has-value': hasValue,\n        })}\n        onChange={handleOnChange}\n        mask={inputMask}\n        {...controlProps}\n      />\n    </FormControlDecoratorGroup>\n  );\n});\n\nconst SIZE_CHOICES = ['sm', 'lg'];\n\nFormControl.Feedback = FormControlFeedback;\nFormControl.Description = FormControlFeedback;\n\nFormControl.propTypes = {\n  /** Specifies class name to append to the base element. */\n  className: PropTypes.string,\n  /** Specifies base element for the control component. */\n  as: PropTypes.elementType,\n  /** Specifies function that is triggered on input value change. */\n  onChange: PropTypes.func,\n  /** Specifies default value of the input component. */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /** Specifies current value of the input component. */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /** Specifies id of the control component. */\n  id: PropTypes.string,\n  /** Specifies class name for the control component. */\n  controlClassName: PropTypes.string,\n  /** Specifies size for the control component. */\n  size: PropTypes.oneOf(SIZE_CHOICES),\n  /** Specifies leading element to display for the input component. */\n  leadingElement: PropTypes.node,\n  /** Specifies trailing element to display for the input component. */\n  trailingElement: PropTypes.node,\n  /** Specifies floating label to display for the input component. */\n  floatingLabel: PropTypes.node,\n  /** Specifies whether to render input as plain text. */\n  plaintext: PropTypes.bool,\n  /** Specifies whether to display control in valid state, this affects styling. */\n  isValid: PropTypes.bool,\n  /** Specifies whether to display control in invalid state, this affects styling. */\n  isInvalid: PropTypes.bool,\n  /** Only for `as=\"textarea\"`. Specifies whether the input can be resized according to the height of content. */\n  autoResize: PropTypes.bool,\n  /** Specifies what format to use for the input mask. */\n  inputMask: PropTypes.string,\n};\n\nFormControl.defaultProps = {\n  as: 'input',\n  className: undefined,\n  id: undefined,\n  controlClassName: undefined,\n  onChange: undefined,\n  defaultValue: undefined,\n  value: undefined,\n  size: undefined,\n  leadingElement: undefined,\n  trailingElement: undefined,\n  floatingLabel: undefined,\n  plaintext: false,\n  isValid: undefined,\n  isInvalid: undefined,\n  autoResize: false,\n  inputMask: undefined,\n};\n\nexport default FormControl;\n"],"mappings":"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","ignoreList":[]}