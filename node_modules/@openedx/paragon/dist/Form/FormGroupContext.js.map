{"version":3,"file":"FormGroupContext.js","names":["React","useState","useEffect","useMemo","useCallback","PropTypes","classNames","newId","useIdList","omitUndefinedProperties","FORM_CONTROL_SIZES","identityFn","props","noop","FormGroupContext","createContext","getControlProps","useSetIsControlGroupEffect","getLabelProps","getDescriptorProps","hasFormGroupProvider","useFormGroupContext","useContext","useStateEffect","initialState","_useState","_useState2","_slicedToArray","state","setState","useSetStateEffect","newState","FormGroupContextProvider","_ref","children","explicitControlId","controlId","isInvalid","isValid","size","_useIdList","_useIdList2","describedByIds","registerDescriptorId","_useIdList3","_useIdList4","labelledByIds","registerLabelerId","_useStateEffect","_useStateEffect2","isControlGroup","controlProps","labelledByIdsForControl","undefined","_objectSpread","id","labelProps","htmlFor","descriptorProps","contextValue","createElement","Provider","value","propTypes","node","isRequired","string","bool","oneOf","SMALL","LARGE","defaultProps"],"sources":["../../src/Form/FormGroupContext.jsx"],"sourcesContent":["import React, {\n  useState, useEffect, useMemo, useCallback,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { newId } from '../utils';\nimport { useIdList, omitUndefinedProperties } from './fieldUtils';\nimport { FORM_CONTROL_SIZES } from './constants';\n\nconst identityFn = props => props;\nconst noop = () => {};\n\nconst FormGroupContext = React.createContext({\n  getControlProps: identityFn,\n  useSetIsControlGroupEffect: noop,\n  getLabelProps: identityFn,\n  getDescriptorProps: identityFn,\n  hasFormGroupProvider: false,\n});\n\nconst useFormGroupContext = () => React.useContext(FormGroupContext);\n\nconst useStateEffect = (initialState) => {\n  const [state, setState] = useState(initialState);\n  const useSetStateEffect = (newState) => {\n    useEffect(() => setState(newState), [newState]);\n  };\n  return [state, useSetStateEffect];\n};\n\nfunction FormGroupContextProvider({\n  children,\n  controlId: explicitControlId,\n  isInvalid,\n  isValid,\n  size,\n}) {\n  const controlId = useMemo(() => explicitControlId || newId('form-field'), [explicitControlId]);\n  const [describedByIds, registerDescriptorId] = useIdList(controlId);\n  const [labelledByIds, registerLabelerId] = useIdList(controlId);\n  const [isControlGroup, useSetIsControlGroupEffect] = useStateEffect(false);\n\n  const getControlProps = useCallback((controlProps) => {\n    // labelledByIds from the list above should only be added to a control\n    // if it the control is a group. We prefer adding a condition here because:\n    //    - Hooks cannot be called inside conditionals\n    //    - The getLabelProps function below is forced to generate an id\n    //      whether it is needed or not.\n    //    - This is what allows consumers of Paragon to use <Form.Label>\n    //      interchangeably between ControlGroup type controls and regular Controls\n    const labelledByIdsForControl = isControlGroup ? labelledByIds : undefined;\n    return omitUndefinedProperties({\n      ...controlProps,\n      'aria-describedby': classNames(controlProps['aria-describedby'], describedByIds) || undefined,\n      'aria-labelledby': classNames(controlProps['aria-labelledby'], labelledByIdsForControl) || undefined,\n      id: controlId,\n    });\n  }, [\n    isControlGroup,\n    describedByIds,\n    labelledByIds,\n    controlId,\n  ]);\n\n  const getLabelProps = (labelProps) => {\n    const id = registerLabelerId(labelProps?.id);\n    if (isControlGroup) {\n      return { ...labelProps, id };\n    }\n    return { ...labelProps, htmlFor: controlId };\n  };\n\n  const getDescriptorProps = (descriptorProps) => {\n    const id = registerDescriptorId(descriptorProps?.id);\n    return { ...descriptorProps, id };\n  };\n\n  const contextValue = {\n    getControlProps,\n    getLabelProps,\n    getDescriptorProps,\n    useSetIsControlGroupEffect,\n    isControlGroup,\n    controlId,\n    isInvalid,\n    isValid,\n    size,\n    hasFormGroupProvider: true,\n  };\n\n  return (\n    <FormGroupContext.Provider value={contextValue}>\n      {children}\n    </FormGroupContext.Provider>\n  );\n}\n\nFormGroupContextProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n  controlId: PropTypes.string,\n  isInvalid: PropTypes.bool,\n  isValid: PropTypes.bool,\n  size: PropTypes.oneOf([\n    FORM_CONTROL_SIZES.SMALL,\n    FORM_CONTROL_SIZES.LARGE,\n  ]),\n};\n\nFormGroupContextProvider.defaultProps = {\n  controlId: undefined,\n  isInvalid: undefined,\n  isValid: undefined,\n  size: undefined,\n};\n\nexport {\n  FormGroupContext,\n  FormGroupContextProvider,\n  useFormGroupContext,\n};\n"],"mappings":"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","ignoreList":[]}