{"version":3,"file":"FormSwitch.js","names":["React","PropTypes","classNames","FormCheckbox","useFormGroupContext","SwitchControl","forwardRef","_ref","ref","isIndeterminate","props","_objectWithoutProperties","_excluded","defaultRef","useRef","resolvedRef","_useFormGroupContext","getControlProps","checkboxProps","_objectSpread","className","useEffect","current","indeterminate","createElement","_extends","type","propTypes","bool","string","defaultProps","undefined","FormSwitch","_ref2","children","helperText","_excluded2","role","controlAs","isValid","isInvalid","description","node","isRequired","labelClassName","floatLabelLeft"],"sources":["../../src/Form/FormSwitch.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FormCheckbox from './FormCheckbox';\nimport { useFormGroupContext } from './FormGroupContext';\n\nconst SwitchControl = React.forwardRef(\n  ({ isIndeterminate, ...props }, ref) => {\n    const defaultRef = React.useRef();\n    const resolvedRef = ref || defaultRef;\n    const { getControlProps } = useFormGroupContext();\n    const checkboxProps = getControlProps({\n      ...props,\n      className: classNames(\n        'pgn__form-switch-input',\n        props.className,\n      ),\n    });\n\n    React.useEffect(() => {\n      // this if(resolvedRef.current) prevents console errors in testing\n      if (resolvedRef.current) {\n        resolvedRef.current.indeterminate = isIndeterminate;\n      }\n    }, [resolvedRef, isIndeterminate]);\n\n    return (\n      <input\n        type=\"checkbox\"\n        {...checkboxProps}\n        ref={resolvedRef}\n      />\n    );\n  },\n);\n\nSwitchControl.propTypes = {\n  /** Specifies whether input should be rendered in indeterminate state. */\n  isIndeterminate: PropTypes.bool,\n  /** Specifies class name to append to the base element. */\n  className: PropTypes.string,\n};\n\nSwitchControl.defaultProps = {\n  isIndeterminate: false,\n  className: undefined,\n};\n\nconst FormSwitch = React.forwardRef(({\n  children,\n  className,\n  helperText,\n  ...props\n}, ref) => (\n  <div className=\"d-inline-flex flex-column\">\n    <FormCheckbox\n      className={classNames('pgn__form-switch', className)}\n      {...props}\n      role=\"switch\"\n      ref={ref}\n      controlAs={SwitchControl}\n      // ignore the following props for form switch\n      isValid={null}\n      isInvalid={null}\n      description={null}\n    >\n      {children}\n    </FormCheckbox>\n    {helperText && (\n      <div className=\"pgn__form-switch-helper-text\">\n        {helperText}\n      </div>\n    )}\n  </div>\n));\n\nFormSwitch.propTypes = {\n  /** Specifies contents of the component. */\n  children: PropTypes.node.isRequired,\n  /** Specifies class name to append to the base element. */\n  className: PropTypes.string,\n  /** Specifies class name to append to the label element. */\n  labelClassName: PropTypes.string,\n  /** Specifies helper text to display below the switch. */\n  helperText: PropTypes.node,\n  /** Determines whether the label should float to the left when the switch is active. */\n  floatLabelLeft: PropTypes.bool,\n};\n\nFormSwitch.defaultProps = {\n  className: undefined,\n  labelClassName: undefined,\n  helperText: undefined,\n  floatLabelLeft: false,\n};\n\nexport { SwitchControl };\nexport default FormSwitch;\n"],"mappings":"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","ignoreList":[]}