{"version":3,"file":"BulkActions.js","names":["React","useContext","PropTypes","classNames","DataTableContext","Actions","BulkActions","_ref","className","rest","_objectWithoutProperties","_excluded","tableInstance","bulkActions","selectedFlatRows","_tableInstance$contro","_slicedToArray","controlledTableSelections","isEntireTableSelected","args","createElement","actions","map","action","component","_extends","defaultProps","propTypes","string"],"sources":["../../src/DataTable/BulkActions.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport DataTableContext from './DataTableContext';\nimport Actions from './CollapsibleButtonGroup';\n\nfunction BulkActions({ className, ...rest }) {\n  const tableInstance = useContext(DataTableContext);\n  const {\n    bulkActions,\n    selectedFlatRows,\n    controlledTableSelections: [{ isEntireTableSelected }],\n  } = tableInstance;\n\n  const args = {\n    selectedFlatRows,\n    isEntireTableSelected,\n    tableInstance,\n  };\n\n  if (typeof bulkActions === 'function') {\n    return <div className={classNames('pgn__bulk-actions', className)}>{bulkActions(args)}</div>;\n  }\n\n  const actions = bulkActions.map(action => ({ component: action, args }));\n\n  return (\n    <Actions\n      className={classNames('pgn__bulk-actions', className)}\n      data-testid=\"bulk-actions\"\n      actions={actions}\n      {...rest}\n    />\n  );\n}\n\nBulkActions.defaultProps = {\n  className: null,\n};\n\nBulkActions.propTypes = {\n  /** class names for the div wrapping the button components */\n  className: PropTypes.string,\n};\n\nexport default BulkActions;\n"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,YAAY;AAEnC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,OAAO,MAAM,0BAA0B;AAE9C,SAASC,WAAWA,CAAAC,IAAA,EAAyB;EAAA,IAAtBC,SAAS,GAAAD,IAAA,CAATC,SAAS;IAAKC,IAAI,GAAAC,wBAAA,CAAAH,IAAA,EAAAI,SAAA;EACvC,IAAMC,aAAa,GAAGX,UAAU,CAACG,gBAAgB,CAAC;EAClD,IACES,WAAW,GAGTD,aAAa,CAHfC,WAAW;IACXC,gBAAgB,GAEdF,aAAa,CAFfE,gBAAgB;IAAAC,qBAAA,GAAAC,cAAA,CAEdJ,aAAa,CADfK,yBAAyB;IAAKC,qBAAqB,GAAAH,qBAAA,IAArBG,qBAAqB;EAGrD,IAAMC,IAAI,GAAG;IACXL,gBAAgB,EAAhBA,gBAAgB;IAChBI,qBAAqB,EAArBA,qBAAqB;IACrBN,aAAa,EAAbA;EACF,CAAC;EAED,IAAI,OAAOC,WAAW,KAAK,UAAU,EAAE;IACrC,oBAAOb,KAAA,CAAAoB,aAAA;MAAKZ,SAAS,EAAEL,UAAU,CAAC,mBAAmB,EAAEK,SAAS;IAAE,GAAEK,WAAW,CAACM,IAAI,CAAO,CAAC;EAC9F;EAEA,IAAME,OAAO,GAAGR,WAAW,CAACS,GAAG,CAAC,UAAAC,MAAM;IAAA,OAAK;MAAEC,SAAS,EAAED,MAAM;MAAEJ,IAAI,EAAJA;IAAK,CAAC;EAAA,CAAC,CAAC;EAExE,oBACEnB,KAAA,CAAAoB,aAAA,CAACf,OAAO,EAAAoB,QAAA;IACNjB,SAAS,EAAEL,UAAU,CAAC,mBAAmB,EAAEK,SAAS,CAAE;IACtD,eAAY,cAAc;IAC1Ba,OAAO,EAAEA;EAAQ,GACbZ,IAAI,CACT,CAAC;AAEN;AAEAH,WAAW,CAACoB,YAAY,GAAG;EACzBlB,SAAS,EAAE;AACb,CAAC;AAEDF,WAAW,CAACqB,SAAS,GAAG;EACtB;EACAnB,SAAS,EAAEN,SAAS,CAAC0B;AACvB,CAAC;AAED,eAAetB,WAAW","ignoreList":[]}