{"version":3,"file":"Table.js","names":["React","useContext","PropTypes","classNames","Spinner","TableHeaderRow","TableRow","useRows","DataTableContext","Table","_ref","isStriped","_useRows","getTableProps","prepareRow","displayRows","headerGroups","getTableBodyProps","_useContext","isLoading","renderRows","map","row","createElement","key","id","className","animation","screenReaderText","defaultProps","propTypes","bool"],"sources":["../../src/DataTable/Table.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Spinner from '../Spinner';\nimport TableHeaderRow from './TableHeaderRow';\nimport TableRow from './TableRow';\nimport { useRows } from './hooks';\nimport DataTableContext from './DataTableContext';\n\nfunction Table({\n  isStriped,\n}) {\n  const {\n    getTableProps, prepareRow, displayRows, headerGroups, getTableBodyProps,\n  } = useRows();\n  const { isLoading } = useContext(DataTableContext);\n\n  const renderRows = () => displayRows.map((row) => {\n    prepareRow(row);\n    return (\n      <TableRow row={row} key={row.id} />\n    );\n  });\n\n  if (!getTableProps) {\n    return null;\n  }\n\n  return (\n    <div\n      className={classNames('pgn__data-table-container', { 'is-loading': isLoading })}\n      data-testid=\"data-table-container\"\n    >\n      {isLoading && (\n        <div className=\"pgn__data-table-spinner\" data-testid=\"data-table-spinner\">\n          <Spinner animation=\"border\" screenReaderText=\"loading\" />\n        </div>\n      )}\n      <table {...getTableProps({\n        className: classNames({ 'pgn__data-table': true, 'is-striped': isStriped }),\n      })}\n      >\n        <TableHeaderRow headerGroups={headerGroups} />\n        <tbody {...getTableBodyProps()}>\n          {renderRows()}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nTable.defaultProps = {\n  isStriped: true,\n};\n\nTable.propTypes = {\n  /** should table rows be striped */\n  isStriped: PropTypes.bool,\n};\n\nexport default Table;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,OAAO,QAAQ,SAAS;AACjC,OAAOC,gBAAgB,MAAM,oBAAoB;AAEjD,SAASC,KAAKA,CAAAC,IAAA,EAEX;EAAA,IADDC,SAAS,GAAAD,IAAA,CAATC,SAAS;EAET,IAAAC,QAAA,GAEIL,OAAO,CAAC,CAAC;IADXM,aAAa,GAAAD,QAAA,CAAbC,aAAa;IAAEC,UAAU,GAAAF,QAAA,CAAVE,UAAU;IAAEC,WAAW,GAAAH,QAAA,CAAXG,WAAW;IAAEC,YAAY,GAAAJ,QAAA,CAAZI,YAAY;IAAEC,iBAAiB,GAAAL,QAAA,CAAjBK,iBAAiB;EAEzE,IAAAC,WAAA,GAAsBjB,UAAU,CAACO,gBAAgB,CAAC;IAA1CW,SAAS,GAAAD,WAAA,CAATC,SAAS;EAEjB,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA;IAAA,OAASL,WAAW,CAACM,GAAG,CAAC,UAACC,GAAG,EAAK;MAChDR,UAAU,CAACQ,GAAG,CAAC;MACf,oBACEtB,KAAA,CAAAuB,aAAA,CAACjB,QAAQ;QAACgB,GAAG,EAAEA,GAAI;QAACE,GAAG,EAAEF,GAAG,CAACG;MAAG,CAAE,CAAC;IAEvC,CAAC,CAAC;EAAA;EAEF,IAAI,CAACZ,aAAa,EAAE;IAClB,OAAO,IAAI;EACb;EAEA,oBACEb,KAAA,CAAAuB,aAAA;IACEG,SAAS,EAAEvB,UAAU,CAAC,2BAA2B,EAAE;MAAE,YAAY,EAAEgB;IAAU,CAAC,CAAE;IAChF,eAAY;EAAsB,GAEjCA,SAAS,iBACRnB,KAAA,CAAAuB,aAAA;IAAKG,SAAS,EAAC,yBAAyB;IAAC,eAAY;EAAoB,gBACvE1B,KAAA,CAAAuB,aAAA,CAACnB,OAAO;IAACuB,SAAS,EAAC,QAAQ;IAACC,gBAAgB,EAAC;EAAS,CAAE,CACrD,CACN,eACD5B,KAAA,CAAAuB,aAAA,UAAWV,aAAa,CAAC;IACvBa,SAAS,EAAEvB,UAAU,CAAC;MAAE,iBAAiB,EAAE,IAAI;MAAE,YAAY,EAAEQ;IAAU,CAAC;EAC5E,CAAC,CAAC,eAEAX,KAAA,CAAAuB,aAAA,CAAClB,cAAc;IAACW,YAAY,EAAEA;EAAa,CAAE,CAAC,eAC9ChB,KAAA,CAAAuB,aAAA,UAAWN,iBAAiB,CAAC,CAAC,EAC3BG,UAAU,CAAC,CACP,CACF,CACJ,CAAC;AAEV;AAEAX,KAAK,CAACoB,YAAY,GAAG;EACnBlB,SAAS,EAAE;AACb,CAAC;AAEDF,KAAK,CAACqB,SAAS,GAAG;EAChB;EACAnB,SAAS,EAAET,SAAS,CAAC6B;AACvB,CAAC;AAED,eAAetB,KAAK","ignoreList":[]}