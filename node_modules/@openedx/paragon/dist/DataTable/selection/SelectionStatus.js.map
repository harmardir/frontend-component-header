{"version":3,"file":"SelectionStatus.js","names":["React","useContext","PropTypes","DataTableContext","BaseSelectionStatus","useRows","SelectionStatus","_ref","className","clearSelectionText","_useContext","toggleAllRowsSelected","state","_useRows","displayRows","selectedRowIds","numSelectedRows","Object","keys","length","numSelectedRowsOnPage","filter","r","isSelected","selectionStatusProps","onSelectAll","onClear","createElement","propTypes","string","oneOfType","element","defaultProps","undefined"],"sources":["../../../src/DataTable/selection/SelectionStatus.jsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport DataTableContext from '../DataTableContext';\nimport BaseSelectionStatus from './BaseSelectionStatus';\nimport { useRows } from '../hooks';\n\nfunction SelectionStatus({ className, clearSelectionText }) {\n  const { toggleAllRowsSelected, state } = useContext(DataTableContext);\n  const { displayRows } = useRows();\n  const { selectedRowIds } = state;\n  const numSelectedRows = Object.keys(selectedRowIds || {}).length;\n  const numSelectedRowsOnPage = displayRows.filter(r => r.isSelected).length;\n  const selectionStatusProps = {\n    className,\n    numSelectedRows,\n    numSelectedRowsOnPage,\n    clearSelectionText,\n    onSelectAll: () => toggleAllRowsSelected(true),\n    onClear: () => toggleAllRowsSelected(false),\n  };\n  return <BaseSelectionStatus {...selectionStatusProps} />;\n}\n\nSelectionStatus.propTypes = {\n  /** A class name to append to the base element */\n  className: PropTypes.string,\n  /** A text that appears on the `Clear selection` button, defaults to 'Clear Selection' */\n  clearSelectionText: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n};\n\nSelectionStatus.defaultProps = {\n  className: undefined,\n  clearSelectionText: undefined,\n};\n\nexport default SelectionStatus;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,SAAS,MAAM,YAAY;AAElC,OAAOC,gBAAgB,MAAM,qBAAqB;AAClD,OAAOC,mBAAmB,MAAM,uBAAuB;AACvD,SAASC,OAAO,QAAQ,UAAU;AAElC,SAASC,eAAeA,CAAAC,IAAA,EAAoC;EAAA,IAAjCC,SAAS,GAAAD,IAAA,CAATC,SAAS;IAAEC,kBAAkB,GAAAF,IAAA,CAAlBE,kBAAkB;EACtD,IAAAC,WAAA,GAAyCT,UAAU,CAACE,gBAAgB,CAAC;IAA7DQ,qBAAqB,GAAAD,WAAA,CAArBC,qBAAqB;IAAEC,KAAK,GAAAF,WAAA,CAALE,KAAK;EACpC,IAAAC,QAAA,GAAwBR,OAAO,CAAC,CAAC;IAAzBS,WAAW,GAAAD,QAAA,CAAXC,WAAW;EACnB,IAAQC,cAAc,GAAKH,KAAK,CAAxBG,cAAc;EACtB,IAAMC,eAAe,GAAGC,MAAM,CAACC,IAAI,CAACH,cAAc,IAAI,CAAC,CAAC,CAAC,CAACI,MAAM;EAChE,IAAMC,qBAAqB,GAAGN,WAAW,CAACO,MAAM,CAAC,UAAAC,CAAC;IAAA,OAAIA,CAAC,CAACC,UAAU;EAAA,EAAC,CAACJ,MAAM;EAC1E,IAAMK,oBAAoB,GAAG;IAC3BhB,SAAS,EAATA,SAAS;IACTQ,eAAe,EAAfA,eAAe;IACfI,qBAAqB,EAArBA,qBAAqB;IACrBX,kBAAkB,EAAlBA,kBAAkB;IAClBgB,WAAW,EAAE,SAAAA,YAAA;MAAA,OAAMd,qBAAqB,CAAC,IAAI,CAAC;IAAA;IAC9Ce,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMf,qBAAqB,CAAC,KAAK,CAAC;IAAA;EAC7C,CAAC;EACD,oBAAOX,KAAA,CAAA2B,aAAA,CAACvB,mBAAmB,EAAKoB,oBAAuB,CAAC;AAC1D;AAEAlB,eAAe,CAACsB,SAAS,GAAG;EAC1B;EACApB,SAAS,EAAEN,SAAS,CAAC2B,MAAM;EAC3B;EACApB,kBAAkB,EAAEP,SAAS,CAAC4B,SAAS,CAAC,CAAC5B,SAAS,CAAC2B,MAAM,EAAE3B,SAAS,CAAC6B,OAAO,CAAC;AAC/E,CAAC;AAEDzB,eAAe,CAAC0B,YAAY,GAAG;EAC7BxB,SAAS,EAAEyB,SAAS;EACpBxB,kBAAkB,EAAEwB;AACtB,CAAC;AAED,eAAe3B,eAAe","ignoreList":[]}