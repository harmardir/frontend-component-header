{"version":3,"file":"ControlledSelectHeader.js","names":["React","useContext","useMemo","useCallback","PropTypes","CheckboxControl","DataTableContext","clearPageSelectionAction","setSelectedRowsAction","ControlledSelectHeader","_ref","rows","_useContext","itemCount","_useContext$controlle","_slicedToArray","controlledTableSelections","dispatch","getToggleAllPageRowsSelectedProps","selectedRowIds","state","isAllPageRowsSelected","selectedPageRowIds","Object","keys","toggleAllPageRowsSelected","toggleAllPageRowsSelectedProps","isIndeterminate","indeterminate","createElement","className","_extends","onChange","propTypes","arrayOf","shape","id","oneOfType","string","number","isRequired"],"sources":["../../../src/DataTable/selection/ControlledSelectHeader.jsx"],"sourcesContent":["import React, { useContext, useMemo, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { CheckboxControl } from '../../Form';\nimport DataTableContext from '../DataTableContext';\n\nimport {\n  clearPageSelectionAction,\n  setSelectedRowsAction,\n} from './data/actions';\n\nfunction ControlledSelectHeader({ rows }) {\n  const {\n    itemCount,\n    controlledTableSelections: [, dispatch],\n    getToggleAllPageRowsSelectedProps,\n    state: { selectedRowIds },\n    isAllPageRowsSelected,\n  } = useContext(DataTableContext);\n\n  const selectedPageRowIds = useMemo(\n    () => Object.keys(selectedRowIds),\n    [selectedRowIds],\n  );\n\n  const toggleAllPageRowsSelected = useCallback(\n    () => {\n      if (isAllPageRowsSelected) {\n        dispatch(clearPageSelectionAction(selectedPageRowIds));\n      } else {\n        dispatch(setSelectedRowsAction(rows, itemCount));\n      }\n    },\n    [rows, selectedPageRowIds, isAllPageRowsSelected, dispatch, itemCount],\n  );\n\n  const toggleAllPageRowsSelectedProps = getToggleAllPageRowsSelectedProps();\n  toggleAllPageRowsSelectedProps.isIndeterminate = toggleAllPageRowsSelectedProps.indeterminate;\n  // delete unused ``indeterminate`` prop\n  delete toggleAllPageRowsSelectedProps.indeterminate;\n\n  return (\n    <div className=\"pgn__data-table__controlled-select\">\n      <CheckboxControl\n        {...toggleAllPageRowsSelectedProps}\n        onChange={toggleAllPageRowsSelected}\n      />\n    </div>\n  );\n}\n\nControlledSelectHeader.propTypes = {\n  rows: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  })).isRequired,\n};\n\nexport default ControlledSelectHeader;\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,OAAO,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,SAAS,MAAM,YAAY;AAElC,SAASC,eAAe,QAAQ,YAAY;AAC5C,OAAOC,gBAAgB,MAAM,qBAAqB;AAElD,SACEC,wBAAwB,EACxBC,qBAAqB,QAChB,gBAAgB;AAEvB,SAASC,sBAAsBA,CAAAC,IAAA,EAAW;EAAA,IAARC,IAAI,GAAAD,IAAA,CAAJC,IAAI;EACpC,IAAAC,WAAA,GAMIX,UAAU,CAACK,gBAAgB,CAAC;IAL9BO,SAAS,GAAAD,WAAA,CAATC,SAAS;IAAAC,qBAAA,GAAAC,cAAA,CAAAH,WAAA,CACTI,yBAAyB;IAAKC,QAAQ,GAAAH,qBAAA;IACtCI,iCAAiC,GAAAN,WAAA,CAAjCM,iCAAiC;IACxBC,cAAc,GAAAP,WAAA,CAAvBQ,KAAK,CAAID,cAAc;IACvBE,qBAAqB,GAAAT,WAAA,CAArBS,qBAAqB;EAGvB,IAAMC,kBAAkB,GAAGpB,OAAO,CAChC;IAAA,OAAMqB,MAAM,CAACC,IAAI,CAACL,cAAc,CAAC;EAAA,GACjC,CAACA,cAAc,CACjB,CAAC;EAED,IAAMM,yBAAyB,GAAGtB,WAAW,CAC3C,YAAM;IACJ,IAAIkB,qBAAqB,EAAE;MACzBJ,QAAQ,CAACV,wBAAwB,CAACe,kBAAkB,CAAC,CAAC;IACxD,CAAC,MAAM;MACLL,QAAQ,CAACT,qBAAqB,CAACG,IAAI,EAAEE,SAAS,CAAC,CAAC;IAClD;EACF,CAAC,EACD,CAACF,IAAI,EAAEW,kBAAkB,EAAED,qBAAqB,EAAEJ,QAAQ,EAAEJ,SAAS,CACvE,CAAC;EAED,IAAMa,8BAA8B,GAAGR,iCAAiC,CAAC,CAAC;EAC1EQ,8BAA8B,CAACC,eAAe,GAAGD,8BAA8B,CAACE,aAAa;EAC7F;EACA,OAAOF,8BAA8B,CAACE,aAAa;EAEnD,oBACE5B,KAAA,CAAA6B,aAAA;IAAKC,SAAS,EAAC;EAAoC,gBACjD9B,KAAA,CAAA6B,aAAA,CAACxB,eAAe,EAAA0B,QAAA,KACVL,8BAA8B;IAClCM,QAAQ,EAAEP;EAA0B,EACrC,CACE,CAAC;AAEV;AAEAhB,sBAAsB,CAACwB,SAAS,GAAG;EACjCtB,IAAI,EAAEP,SAAS,CAAC8B,OAAO,CAAC9B,SAAS,CAAC+B,KAAK,CAAC;IACtCC,EAAE,EAAEhC,SAAS,CAACiC,SAAS,CAAC,CAACjC,SAAS,CAACkC,MAAM,EAAElC,SAAS,CAACmC,MAAM,CAAC,CAAC,CAACC;EAChE,CAAC,CAAC,CAAC,CAACA;AACN,CAAC;AAED,eAAe/B,sBAAsB","ignoreList":[]}