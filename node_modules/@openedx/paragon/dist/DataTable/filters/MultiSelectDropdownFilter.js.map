{"version":3,"file":"MultiSelectDropdownFilter.js","names":["React","useRef","PropTypes","Badge","Stack","DropdownButton","newId","Form","MultiSelectDropdownFilter","_ref","_ref$column","column","setFilter","Header","filterChoices","getHeaderProps","filterValue","ariaLabel","concat","key","checkedBoxes","changeCheckbox","value","includes","newCheckedBoxes","filter","val","push","createElement","variant","id","current","title","CheckboxSet","className","name","map","_ref2","number","Checkbox","checked","onChange","direction","gap","propTypes","shape","func","isRequired","oneOfType","elementType","node","arrayOf","string"],"sources":["../../../src/DataTable/filters/MultiSelectDropdownFilter.jsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Badge from '../../Badge';\nimport Stack from '../../Stack';\nimport { DropdownButton } from '../../Dropdown';\nimport { newId } from '../../utils';\nimport Form from '../../Form';\n\nfunction MultiSelectDropdownFilter({\n  column: {\n    setFilter, Header, filterChoices, getHeaderProps, filterValue,\n  },\n}) {\n  // creates a unique label that does not change on re-render in case there are multiple checkbox filters in the dom\n  const ariaLabel = useRef(newId(`multi-dropdown-filter-label-${getHeaderProps().key}-`));\n  const checkedBoxes = filterValue || [];\n  const changeCheckbox = (value) => {\n    if (checkedBoxes.includes(value)) {\n      const newCheckedBoxes = checkedBoxes.filter((val) => val !== value);\n      return setFilter(newCheckedBoxes);\n    }\n    checkedBoxes.push(value);\n    return setFilter(checkedBoxes);\n  };\n\n  return (\n    <DropdownButton variant=\"outline-primary\" id={ariaLabel.current} title={Header}>\n      <Form.CheckboxSet\n        className=\"pgn__dropdown-filter-checkbox-group\"\n        name={Header}\n        aria-label={Header}\n      >\n        {filterChoices.map(({ name, number, value }) => (\n          <Form.Checkbox\n            key={name}\n            value={name}\n            checked={checkedBoxes.includes(value)}\n            onChange={() => changeCheckbox(value)}\n            aria-label={name}\n          >\n            <Stack direction=\"horizontal\" gap={2}>\n              {name} {number && <Badge variant=\"light\">{number}</Badge>}\n            </Stack>\n          </Form.Checkbox>\n        ))}\n      </Form.CheckboxSet>\n    </DropdownButton>\n  );\n}\n\nMultiSelectDropdownFilter.propTypes = {\n  /**\n   * Specifies a column object.\n   *\n   * `setFilter`: Function to set the filter value.\n   *\n   * `Header`: Column header used for labels and placeholders.\n   *\n   * `filterChoices`: Specifies array of choices.\n   *\n   * `getHeaderProps`: Generates a key unique to the column being filtered.\n   *\n   * `filterValue`: Value for the filter input.\n   */\n  column: PropTypes.shape({\n    /** Function to set the filter value */\n    setFilter: PropTypes.func.isRequired,\n    /** Column header used for labels and placeholders */\n    Header: PropTypes.oneOfType([PropTypes.elementType, PropTypes.node]).isRequired,\n    /** Names and values for the select options */\n    filterChoices: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.number,\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    })).isRequired,\n    /** Generates a key unique to the column being filtered */\n    getHeaderProps: PropTypes.func.isRequired,\n    filterValue: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n\nexport default MultiSelectDropdownFilter;\n"],"mappings":"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","ignoreList":[]}