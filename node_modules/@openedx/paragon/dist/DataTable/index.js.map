{"version":3,"file":"index.js","names":["React","useEffect","useMemo","useReducer","PropTypes","useTable","useMountedLayoutEffect","classNames","Table","getVisibleColumns","requiredWhen","requiredWhenNot","getTableArgs","TableControlBar","EmptyTableContent","TableFooter","BulkActions","DropdownFilters","FilterStatus","RowStatus","SelectionStatus","ControlledSelectionStatus","SmartStatus","TableFilters","TableHeaderCell","TableCell","TableHeaderRow","TablePagination","TablePaginationMinimal","DataTableContext","TableActions","ControlledSelect","ControlledSelectHeader","DataTableLayout","ExpandAll","ExpandRow","useSelectionActions","selectionsReducer","initialState","initialSelectionsState","DataTable","_ref","columns","data","defaultColumnValues","additionalColumns","isSelectable","isPaginated","manualPagination","pageCount","itemCount","isFilterable","manualFilters","fetchData","isSortable","manualSortBy","isExpandable","renderRowSubComponent","bulkActions","tableActions","numBreakoutFilters","initialTableOptions","EmptyTableComponent","manualSelectColumn","showFiltersInSidebar","dataViewToggleOptions","disableElevation","isLoading","children","onSelectedRowsChanged","maxSelectedRows","onMaxSelectedRows","props","_objectWithoutProperties","_excluded","defaultColumn","tableOptions","updatedTableOptions","_objectSpread","stateReducer","newState","action","previousState","type","value","selectedRowIds","rowIndex","parseInt","id","_previousState$select","selectedRowsOrdered","newSelectedRowsOrdered","concat","_toConsumableArray","filter","item","_useReducer","_useReducer2","_slicedToArray","selections","selectionsDispatch","tableArgs","push","hooks","visibleColumns","selectionProps","selectedRows","length","selectedRowsById","forEach","row","useControlledState","state","selectedFlatRows","controlledTableSelections","instance","apply","_instance$state","tableStatePageSize","pageSize","tableStatePageIndex","pageIndex","tableStateSortBy","sortBy","tableStateFilters","filters","tableStateSelectedRowIds","selectionActions","enhancedInstance","createElement","Provider","className","Fragment","content","defaultProps","undefined","SelectionStatusComponent","FilterStatusComponent","RowStatusComponent","isDataViewToggleEnabled","onDataViewToggle","defaultActiveStateValue","togglePlacement","propTypes","arrayOf","shape","Header","oneOfType","elementType","node","isRequired","accessor","string","Cell","Filter","filterChoices","name","number","bool","disableSortBy","func","buttonText","handleClick","variant","disabled","element","oneOf","EmptyTable"],"sources":["../../src/DataTable/index.jsx"],"sourcesContent":["import React, {\n  useEffect, useMemo, useReducer,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { useTable, useMountedLayoutEffect } from 'react-table';\n\nimport classNames from 'classnames';\nimport Table from './Table';\nimport getVisibleColumns from './utils/getVisibleColumns';\nimport { requiredWhen, requiredWhenNot } from '../utils/propTypes';\nimport getTableArgs from './utils/getTableArgs';\nimport TableControlBar from './TableControlBar';\nimport EmptyTableContent from './EmptyTable';\nimport TableFooter from './TableFooter';\nimport BulkActions from './BulkActions';\nimport DropdownFilters from './DropdownFilters';\nimport FilterStatus from './FilterStatus';\nimport RowStatus from './RowStatus';\nimport SelectionStatus from './selection/SelectionStatus';\nimport ControlledSelectionStatus from './selection/ControlledSelectionStatus';\nimport SmartStatus from './SmartStatus';\nimport TableFilters from './TableFilters';\nimport TableHeaderCell from './TableHeaderCell';\nimport TableCell from './TableCell';\nimport TableHeaderRow from './TableHeaderRow';\nimport TablePagination from './TablePagination';\nimport TablePaginationMinimal from './TablePaginationMinimal';\nimport DataTableContext from './DataTableContext';\nimport TableActions from './TableActions';\nimport ControlledSelect from './selection/ControlledSelect';\nimport ControlledSelectHeader from './selection/ControlledSelectHeader';\nimport DataTableLayout from './DataTableLayout';\nimport ExpandAll from './ExpandAll';\nimport ExpandRow from './ExpandRow';\n\nimport { useSelectionActions } from './hooks';\nimport selectionsReducer, { initialState as initialSelectionsState } from './selection/data/reducer';\n\nfunction DataTable({\n  columns, data, defaultColumnValues, additionalColumns, isSelectable,\n  isPaginated, manualPagination, pageCount, itemCount,\n  isFilterable, manualFilters, fetchData, initialState,\n  isSortable, manualSortBy,\n  isExpandable, renderRowSubComponent,\n  bulkActions, tableActions, numBreakoutFilters,\n  initialTableOptions,\n  EmptyTableComponent,\n  manualSelectColumn,\n  showFiltersInSidebar,\n  dataViewToggleOptions,\n  disableElevation,\n  isLoading,\n  children,\n  onSelectedRowsChanged,\n  maxSelectedRows,\n  onMaxSelectedRows,\n  ...props\n}) {\n  const defaultColumn = useMemo(\n    () => (defaultColumnValues),\n    [defaultColumnValues],\n  );\n  const tableOptions = useMemo(() => {\n    const updatedTableOptions = {\n      stateReducer: (newState, action, previousState) => {\n        switch (action.type) {\n          // Note: we override the `toggleAllRowsSelected` action\n          // from react-table because it only clears the selections on the\n          // currently visible page; it does not clear the `selectedRowIds`\n          // as we would expect for selections on different pages. Instead, we\n          // force `selectedRowIds` to be cleared when `toggleAllRowsSelected(false)`\n          // is called.\n          case 'toggleAllRowsSelected': {\n            if (action.value) {\n              return newState;\n            }\n            return {\n              ...newState,\n              selectedRowIds: {},\n            };\n          }\n          /*  Note: We override the `toggleRowSelected` action from react-table\n              because we need to preserve the order of the selected rows.\n              While `selectedRowIds` is an object that contains the selected rows as key-value pairs,\n              it does not maintain the order of selection. Therefore, we have added the `selectedRowsOrdered` property\n              to keep track of the order in which the rows were selected.\n          */\n          case 'toggleRowSelected': {\n            const rowIndex = parseInt(action.id, 10);\n            const { selectedRowsOrdered = [] } = previousState;\n\n            let newSelectedRowsOrdered;\n            if (action.value) {\n              newSelectedRowsOrdered = [...selectedRowsOrdered, rowIndex];\n            } else {\n              newSelectedRowsOrdered = selectedRowsOrdered.filter((item) => item !== rowIndex);\n            }\n\n            return {\n              ...newState,\n              selectedRowsOrdered: newSelectedRowsOrdered,\n            };\n          }\n          default:\n            return newState;\n        }\n      },\n      ...initialTableOptions,\n    };\n    return {\n      columns,\n      data,\n      defaultColumn,\n      manualFilters,\n      manualPagination,\n      manualSortBy,\n      initialState,\n      ...updatedTableOptions,\n    };\n  }, [initialTableOptions, columns, data, defaultColumn, manualFilters, manualPagination, manualSortBy, initialState]);\n\n  const [selections, selectionsDispatch] = useReducer(selectionsReducer, initialSelectionsState);\n\n  if (isPaginated && manualPagination) {\n    // pageCount is required when pagination is manual, if it's not there passing -1 as per react-table docs\n    tableOptions.pageCount = pageCount || -1;\n  }\n\n  // NB: Table args *must* be in a particular order\n  const tableArgs = getTableArgs({\n    tableOptions, isFilterable, isSelectable, isPaginated, isSortable, isExpandable,\n  });\n  // adds selection column and action columns as necessary\n  tableArgs.push(hooks => {\n    hooks.visibleColumns.push(\n      visibleColumns => getVisibleColumns(isSelectable, visibleColumns, additionalColumns, manualSelectColumn),\n    );\n  });\n\n  // Pass any controlled selections from context to the appropriate ``useTable`` arguments to maintain\n  // correct selection states on rows, both from a data perspective and in the UI.\n  const selectionProps = {};\n  const { selectedRows } = selections;\n  if (selectedRows.length > 0) {\n    const selectedRowsById = {};\n    selectedRows.forEach((row) => {\n      selectedRowsById[row.id] = true;\n    });\n    tableArgs.push(hooks => {\n      hooks.useControlledState.push(\n        (state) => ({ ...state, selectedRowIds: selectedRowsById }),\n      );\n    });\n    selectionProps.selectedFlatRows = selectedRows;\n  }\n  const controlledTableSelections = [selections, selectionsDispatch];\n\n  // Use the state and functions returned from useTable to build your UI\n  const instance = useTable(...tableArgs);\n\n  const {\n    pageSize: tableStatePageSize,\n    pageIndex: tableStatePageIndex,\n    sortBy: tableStateSortBy,\n    filters: tableStateFilters,\n    selectedRowIds: tableStateSelectedRowIds,\n  } = instance.state;\n\n  useEffect(() => {\n    if (fetchData) {\n      fetchData({\n        pageSize: tableStatePageSize,\n        pageIndex: tableStatePageIndex,\n        sortBy: tableStateSortBy,\n        filters: tableStateFilters,\n      });\n    }\n  }, [fetchData, tableStatePageSize, tableStatePageIndex, tableStateSortBy, tableStateFilters]);\n\n  useMountedLayoutEffect(() => {\n    if (onSelectedRowsChanged) {\n      onSelectedRowsChanged(tableStateSelectedRowIds);\n    }\n  }, [tableStateSelectedRowIds, onSelectedRowsChanged]);\n\n  const selectionActions = useSelectionActions(instance, controlledTableSelections);\n\n  const enhancedInstance = {\n    ...instance,\n    manualFilters,\n    itemCount,\n    numBreakoutFilters,\n    bulkActions,\n    tableActions,\n    controlledTableSelections,\n    showFiltersInSidebar,\n    dataViewToggleOptions,\n    renderRowSubComponent,\n    disableElevation,\n    isLoading,\n    isSelectable,\n    isPaginated,\n    manualSelectColumn,\n    maxSelectedRows,\n    onMaxSelectedRows,\n    ...selectionProps,\n    ...selectionActions,\n    ...props,\n  };\n\n  return (\n    <DataTableContext.Provider value={enhancedInstance}>\n      <DataTableLayout>\n        <div className={classNames('pgn__data-table-wrapper', {\n          'hide-shadow': !!disableElevation,\n        })}\n        >\n          {children || (\n          <>\n            <TableControlBar />\n            <Table />\n            <EmptyTableComponent content=\"No results found\" />\n            <TableFooter />\n          </>\n          )}\n        </div>\n      </DataTableLayout>\n    </DataTableContext.Provider>\n  );\n}\n\nDataTable.defaultProps = {\n  additionalColumns: [],\n  defaultColumnValues: {},\n  isFilterable: false,\n  isPaginated: false,\n  isSelectable: false,\n  isSortable: false,\n  manualFilters: false,\n  manualPagination: false,\n  manualSortBy: false,\n  fetchData: null,\n  initialState: {},\n  initialTableOptions: {},\n  EmptyTableComponent: EmptyTableContent,\n  children: null,\n  bulkActions: [],\n  tableActions: [],\n  numBreakoutFilters: 1,\n  manualSelectColumn: undefined,\n  SelectionStatusComponent: SelectionStatus,\n  FilterStatusComponent: FilterStatus,\n  RowStatusComponent: RowStatus,\n  showFiltersInSidebar: false,\n  dataViewToggleOptions: {\n    isDataViewToggleEnabled: false,\n    onDataViewToggle: () => {},\n    defaultActiveStateValue: 'card',\n    togglePlacement: 'left',\n  },\n  disableElevation: false,\n  renderRowSubComponent: undefined,\n  isExpandable: false,\n  isLoading: false,\n  onSelectedRowsChanged: undefined,\n  maxSelectedRows: undefined,\n  onMaxSelectedRows: undefined,\n};\n\nDataTable.propTypes = {\n  /** Definition of table columns */\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    /** User visible column name */\n    Header: PropTypes.oneOfType([PropTypes.elementType, PropTypes.node]).isRequired,\n    /** String used to access the correct cell data for this column */\n    accessor: requiredWhenNot(PropTypes.string, 'Cell'),\n    /** Specifies a function that receives `row` as argument and returns cell content */\n    Cell: PropTypes.oneOfType([PropTypes.elementType, PropTypes.node]),\n    /** Specifies filter component */\n    Filter: PropTypes.elementType,\n    /** Specifies filter type */\n    filter: PropTypes.string,\n    /** Specifies filter choices */\n    filterChoices: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.number,\n      value: PropTypes.string,\n    })),\n  })).isRequired,\n  /** Data to be displayed in the table */\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  /** table rows can be selected */\n  isSelectable: PropTypes.bool,\n  /** Alternate column for selecting rows. See react table useSort docs for more information */\n  manualSelectColumn: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    Header: PropTypes.oneOfType([PropTypes.elementType, PropTypes.node]).isRequired,\n    Cell: PropTypes.oneOfType([PropTypes.elementType, PropTypes.node]),\n    disableSortBy: PropTypes.bool.isRequired,\n  }),\n  /** Table columns can be sorted */\n  isSortable: PropTypes.bool,\n  /** Indicates that sorting will be done via backend API. A fetchData function must be provided */\n  manualSortBy: PropTypes.bool,\n  /** Paginate the table */\n  isPaginated: PropTypes.bool,\n  /** Indicates that pagination will be done manually. A fetchData function must be provided */\n  manualPagination: PropTypes.bool,\n  // eslint-disable-next-line react/require-default-props\n  pageCount: requiredWhen(PropTypes.number, 'manualPagination'),\n  /** Table rows can be filtered, using a default filter in the default column values, or in the column definition */\n  isFilterable: PropTypes.bool,\n  /** Indicates that filtering will be done via a backend API. A fetchData function must be provided */\n  manualFilters: PropTypes.bool,\n\n  /** defaults that will be set on each column. Will be overridden by individual column values */\n  defaultColumnValues: PropTypes.shape({\n    /** A default filter component for the column */\n    Filter: PropTypes.elementType,\n  }),\n  /** Actions or other additional non-data columns can be added here  */\n  additionalColumns: PropTypes.arrayOf(PropTypes.shape({\n    /** id must be unique from other columns ids */\n    id: PropTypes.string.isRequired,\n    /** column header that will be displayed to the user */\n    Header: PropTypes.oneOfType([PropTypes.elementType, PropTypes.node]),\n    /** Component that renders in the added column. It will receive the row as a prop */\n    Cell: PropTypes.oneOfType([PropTypes.elementType, PropTypes.node]),\n  })),\n  /** Function that will fetch table data. Called when page size, page index or filters change.\n    * Meant to be used with manual filters and pagination */\n  fetchData: PropTypes.func,\n  /** Initial state passed to react-table's documentation https://github.com/TanStack/table/blob/v7/docs/src/pages/docs/api/useTable.md */\n  initialState: PropTypes.shape({\n    pageSize: requiredWhen(PropTypes.number, 'isPaginated'),\n    pageIndex: requiredWhen(PropTypes.number, 'isPaginated'),\n    filters: requiredWhen(PropTypes.arrayOf(PropTypes.shape()), 'manualFilters'),\n    sortBy: requiredWhen(PropTypes.arrayOf(PropTypes.shape()), 'manualSortBy'),\n    selectedRowIds: PropTypes.shape(),\n    selectedRowsOrdered: PropTypes.arrayOf(PropTypes.number),\n  }),\n  /** Table options passed to react-table's useTable hook. Will override some options passed in to DataTable, such\n     as: data, columns, defaultColumn, manualFilters, manualPagination, manualSortBy, and initialState */\n  initialTableOptions: PropTypes.shape({}),\n  /** Actions to be performed on the table. Called with the table instance. Not displayed if rows are selected. */\n  itemCount: PropTypes.number.isRequired,\n  /** Actions to be performed on selected rows of the table. Called with the selected rows.\n   *  Only displayed if rows are selected. */\n  bulkActions: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.shape({\n          /** Bulk action button text */\n          buttonText: PropTypes.string.isRequired,\n          /** handleClick will be passed the selected rows */\n          handleClick: PropTypes.func.isRequired,\n          /** classnames for button class */\n          className: PropTypes.string,\n          /** optional button variant; only relevant for the first two buttons */\n          variant: PropTypes.string,\n          /** disables button */\n          disabled: PropTypes.bool,\n        }),\n        /** function passed selected items, should return action object */\n        PropTypes.func,\n        /** A custom component representing an action */\n        PropTypes.element,\n      ]),\n    ),\n    /** Function for rendering custom components */\n    PropTypes.func,\n    /** A custom component representing an action */\n    PropTypes.element,\n  ]),\n  /** Function for rendering custom components, called with the table instance */\n  tableActions: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.shape({\n          /** Bulk action button text */\n          buttonText: PropTypes.string.isRequired,\n          /** handleClick will be passed the selected rows */\n          handleClick: PropTypes.func.isRequired,\n          /** classnames for button class */\n          className: PropTypes.string,\n          /** optional button variant; only relevant for the first two buttons */\n          variant: PropTypes.string,\n          /** disables button */\n          disabled: PropTypes.bool,\n        }),\n        /** function passed table instance, should return action object */\n        PropTypes.func,\n        /** A custom component representing an action */\n        PropTypes.element,\n      ]),\n    ),\n    /** Function for rendering custom components */\n    PropTypes.func,\n    /** A custom component representing an action */\n    PropTypes.element,\n  ]),\n  /** Number between one and four filters that can be shown on the top row. */\n  numBreakoutFilters: PropTypes.oneOf([1, 2, 3, 4]),\n  /** Component to be displayed when the table is empty */\n  EmptyTableComponent: PropTypes.elementType,\n  /** Component to be displayed for row status, ie, 10 of 20 rows. Displayed by default in the TableControlBar */\n  RowStatusComponent: PropTypes.elementType,\n  /** Component to be displayed for selection status. Displayed when there are selected rows and no active filters */\n  SelectionStatusComponent: PropTypes.elementType,\n  /** Component to be displayed for filter status. Displayed when there are active filters. */\n  FilterStatusComponent: PropTypes.elementType,\n  /** If children are not provided a table with control bar and footer will be rendered */\n  children: PropTypes.node,\n  /** If true filters will be shown on sidebar instead */\n  showFiltersInSidebar: PropTypes.bool,\n  /** options for data view toggle */\n  dataViewToggleOptions: PropTypes.shape({\n    /** Whether to show a toggle button group which allows view switching between card and table views */\n    isDataViewToggleEnabled: PropTypes.bool,\n    /** Callback invoked when the toggle buttons are clicked, with value of selected button passed in */\n    onDataViewToggle: PropTypes.func,\n    /** default value for toggle active state */\n    defaultActiveStateValue: PropTypes.string,\n    /** placement of toggle 'bottom' will push it to the bottom row in\n     * actions section. Only 'left' and 'bottom' are supported */\n    togglePlacement: PropTypes.string,\n  }),\n  /** Remove the default box shadow on the component */\n  disableElevation: PropTypes.bool,\n  /** A function that will render contents of expanded row, accepts `row` as a prop. */\n  renderRowSubComponent: PropTypes.func,\n  /** Indicates whether table supports expandable rows. */\n  isExpandable: PropTypes.bool,\n  /** Indicates whether the table should show loading states. */\n  isLoading: PropTypes.bool,\n  /** Callback function called when row selections change. */\n  onSelectedRowsChanged: PropTypes.func,\n  /** Indicates the max of rows selectable in the table. Requires isSelectable prop */\n  maxSelectedRows: PropTypes.number,\n  /** Callback after selected max rows. Requires isSelectable and maxSelectedRows props */\n  onMaxSelectedRows: PropTypes.func,\n};\n\nDataTable.BulkActions = BulkActions;\nDataTable.EmptyTable = EmptyTableContent;\nDataTable.DropdownFilters = DropdownFilters;\nDataTable.FilterStatus = FilterStatus;\nDataTable.RowStatus = RowStatus;\nDataTable.SelectionStatus = SelectionStatus;\nDataTable.SmartStatus = SmartStatus;\nDataTable.Table = Table;\nDataTable.TableCell = TableCell;\nDataTable.TableControlBar = TableControlBar;\nDataTable.TableFilters = TableFilters;\nDataTable.TableFooter = TableFooter;\nDataTable.TableHeaderCell = TableHeaderCell;\nDataTable.TableHeaderRow = TableHeaderRow;\nDataTable.TablePagination = TablePagination;\nDataTable.TablePaginationMinimal = TablePaginationMinimal;\nDataTable.TableActions = TableActions;\nDataTable.ControlledSelectionStatus = ControlledSelectionStatus;\nDataTable.ControlledSelect = ControlledSelect;\nDataTable.ControlledSelectHeader = ControlledSelectHeader;\nDataTable.ExpandAll = ExpandAll;\nDataTable.ExpandRow = ExpandRow;\n\nexport default DataTable;\n"],"mappings":"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","ignoreList":[]}