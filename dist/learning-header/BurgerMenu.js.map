{"version":3,"file":"BurgerMenu.js","names":["React","useState","injectIntl","BurgerMenu","_ref","intl","_useState","_useState2","_slicedToArray","isOpen","setIsOpen","toggleMenu","handleLinkClick","event","preventDefault","createElement","className","onClick","concat","href","formatMessage","id","defaultMessage"],"sources":["../../src/learning-header/BurgerMenu.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { injectIntl } from '@edx/frontend-platform/i18n'; // For internationalization\n\nconst BurgerMenu = ({ intl }) => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggleMenu = () => {\n        setIsOpen(!isOpen);  // This toggles the state which should also toggle the class\n    };\n\n    const handleLinkClick = (event) => {\n        toggleMenu();\n        event.preventDefault();  // Prevents default to ensure navigation logic can be controlled\n        // Add navigation logic if necessary\n    };\n\n    return (\n        <div>\n            <button className=\"burger-menu\" onClick={toggleMenu} aria-expanded={isOpen}>\n                &#9776; {/* Burger Icon */}\n            </button>\n            <nav className={`dropdown-nav ${isOpen ? 'show' : ''}`}>\n                <a className=\"dropdown-link\" href=\"https://undp-lms.kashida-learning.co/\" onClick={handleLinkClick}>\n                    {intl.formatMessage({ id: 'header.links.home', defaultMessage: 'Home' })}\n                </a>\n                <a className=\"dropdown-link\" href=\"https://undp-lms.kashida-learning.co/about\" onClick={handleLinkClick}>\n                    {intl.formatMessage({ id: 'header.links.about', defaultMessage: 'About Us' })}\n                </a>\n                <a className=\"dropdown-link\" href=\"https://undp-lms.kashida-learning.co/#courses-categories\" onClick={handleLinkClick}>\n                    {intl.formatMessage({ id: 'header.links.courses', defaultMessage: 'Courses' })}\n                </a>\n            </nav>\n        </div>\n    );\n};\n\nexport default injectIntl(BurgerMenu);\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,6BAA6B,CAAC,CAAC;;AAE1D,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAAiB;EAAA,IAAXC,IAAI,GAAAD,IAAA,CAAJC,IAAI;EACtB,IAAAC,SAAA,GAA4BL,QAAQ,CAAC,KAAK,CAAC;IAAAM,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAApCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EAExB,IAAMI,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACrBD,SAAS,CAAC,CAACD,MAAM,CAAC,CAAC,CAAE;EACzB,CAAC;;EAED,IAAMG,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,KAAK,EAAK;IAC/BF,UAAU,EAAE;IACZE,KAAK,CAACC,cAAc,EAAE,CAAC,CAAE;IACzB;EACJ,CAAC;;EAED,oBACId,KAAA,CAAAe,aAAA,2BACIf,KAAA,CAAAe,aAAA;IAAQC,SAAS,EAAC,aAAa;IAACC,OAAO,EAAEN,UAAW;IAAC,iBAAeF;EAAO,GAAC,SAChE,CACH,eACTT,KAAA,CAAAe,aAAA;IAAKC,SAAS,kBAAAE,MAAA,CAAkBT,MAAM,GAAG,MAAM,GAAG,EAAE;EAAG,gBACnDT,KAAA,CAAAe,aAAA;IAAGC,SAAS,EAAC,eAAe;IAACG,IAAI,EAAC,uCAAuC;IAACF,OAAO,EAAEL;EAAgB,GAC9FP,IAAI,CAACe,aAAa,CAAC;IAAEC,EAAE,EAAE,mBAAmB;IAAEC,cAAc,EAAE;EAAO,CAAC,CAAC,CACxE,eACJtB,KAAA,CAAAe,aAAA;IAAGC,SAAS,EAAC,eAAe;IAACG,IAAI,EAAC,4CAA4C;IAACF,OAAO,EAAEL;EAAgB,GACnGP,IAAI,CAACe,aAAa,CAAC;IAAEC,EAAE,EAAE,oBAAoB;IAAEC,cAAc,EAAE;EAAW,CAAC,CAAC,CAC7E,eACJtB,KAAA,CAAAe,aAAA;IAAGC,SAAS,EAAC,eAAe;IAACG,IAAI,EAAC,8CAA8C;IAACF,OAAO,EAAEL;EAAgB,GACrGP,IAAI,CAACe,aAAa,CAAC;IAAEC,EAAE,EAAE,sBAAsB;IAAEC,cAAc,EAAE;EAAU,CAAC,CAAC,CAC9E,CACF,CACJ;AAEd,CAAC;AAED,eAAepB,UAAU,CAACC,UAAU,CAAC"}