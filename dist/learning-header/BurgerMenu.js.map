{"version":3,"file":"BurgerMenu.js","names":["React","useState","injectIntl","BurgerMenu","_ref","intl","_useState","_useState2","_slicedToArray","isOpen","setIsOpen","toggleMenu","handleLinkClick","event","preventDefault","createElement","className","onClick","href","formatMessage","id","defaultMessage"],"sources":["../../src/learning-header/BurgerMenu.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { injectIntl } from '@edx/frontend-platform/i18n'; // If you need internationalization\n\nconst BurgerMenu = ({ intl }) => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggleMenu = () => {\n        setIsOpen(!isOpen);\n    };\n\n    // Accessible navigation toggle\n    const handleLinkClick = (event) => {\n        toggleMenu();\n        event.preventDefault(); // Prevent default to stop any unexpected behavior while testing\n        // Potentially handle navigation here or ensure <a> tags navigate correctly.\n    };\n\n    return (\n        <div>\n            <button className=\"burger-menu\" onClick={toggleMenu} aria-expanded={isOpen}>\n                &#9776; {/* Burger Icon */}\n            </button>\n            {isOpen && (\n                <nav className=\"dropdown-nav\">\n                    <a className=\"dropdown-link\" href=\"https://undp-lms.kashida-learning.co/\" onClick={handleLinkClick}>\n                        {intl.formatMessage({ id: 'header.links.home', defaultMessage: 'Home' })}\n                    </a>\n                    <a className=\"dropdown-link\" href=\"https://undp-lms.kashida-learning.co/about\" onClick={handleLinkClick}>\n                        {intl.formatMessage({ id: 'header.links.about', defaultMessage: 'About Us' })}\n                    </a>\n                    <a className=\"dropdown-link\" href=\"https://undp-lms.kashida-learning.co/courses\" onClick={handleLinkClick}>\n                        {intl.formatMessage({ id: 'header.links.courses', defaultMessage: 'Courses' })}\n                    </a>\n                </nav>\n            )}\n        </div>\n    );\n};\n\nexport default injectIntl(BurgerMenu);"],"mappings":";;;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,6BAA6B,CAAC,CAAC;;AAE1D,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAAiB;EAAA,IAAXC,IAAI,GAAAD,IAAA,CAAJC,IAAI;EACtB,IAAAC,SAAA,GAA4BL,QAAQ,CAAC,KAAK,CAAC;IAAAM,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAApCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EAExB,IAAMI,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACrBD,SAAS,CAAC,CAACD,MAAM,CAAC;EACtB,CAAC;;EAED;EACA,IAAMG,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,KAAK,EAAK;IAC/BF,UAAU,EAAE;IACZE,KAAK,CAACC,cAAc,EAAE,CAAC,CAAC;IACxB;EACJ,CAAC;;EAED,oBACId,KAAA,CAAAe,aAAA,2BACIf,KAAA,CAAAe,aAAA;IAAQC,SAAS,EAAC,aAAa;IAACC,OAAO,EAAEN,UAAW;IAAC,iBAAeF;EAAO,GAAC,SAChE,CACH,EACRA,MAAM,iBACHT,KAAA,CAAAe,aAAA;IAAKC,SAAS,EAAC;EAAc,gBACzBhB,KAAA,CAAAe,aAAA;IAAGC,SAAS,EAAC,eAAe;IAACE,IAAI,EAAC,uCAAuC;IAACD,OAAO,EAAEL;EAAgB,GAC9FP,IAAI,CAACc,aAAa,CAAC;IAAEC,EAAE,EAAE,mBAAmB;IAAEC,cAAc,EAAE;EAAO,CAAC,CAAC,CACxE,eACJrB,KAAA,CAAAe,aAAA;IAAGC,SAAS,EAAC,eAAe;IAACE,IAAI,EAAC,4CAA4C;IAACD,OAAO,EAAEL;EAAgB,GACnGP,IAAI,CAACc,aAAa,CAAC;IAAEC,EAAE,EAAE,oBAAoB;IAAEC,cAAc,EAAE;EAAW,CAAC,CAAC,CAC7E,eACJrB,KAAA,CAAAe,aAAA;IAAGC,SAAS,EAAC,eAAe;IAACE,IAAI,EAAC,8CAA8C;IAACD,OAAO,EAAEL;EAAgB,GACrGP,IAAI,CAACc,aAAa,CAAC;IAAEC,EAAE,EAAE,sBAAsB;IAAEC,cAAc,EAAE;EAAU,CAAC,CAAC,CAC9E,CAEX,CACC;AAEd,CAAC;AAED,eAAenB,UAAU,CAACC,UAAU,CAAC"}